ARM GAS  /tmp/cceOpPjb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"usbd_cdc_if.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	CDC_DeInit_FS:
  25              	.LFB65:
  26              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /**
   2:Src/usbd_cdc_if.c ****   ******************************************************************************
   3:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   4:Src/usbd_cdc_if.c ****   * @brief          :
   5:Src/usbd_cdc_if.c ****   ******************************************************************************
   6:Src/usbd_cdc_if.c ****   * This notice applies to any and all portions of this file
   7:Src/usbd_cdc_if.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/usbd_cdc_if.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/usbd_cdc_if.c ****   * inserted by the user or by software development tools
  10:Src/usbd_cdc_if.c ****   * are owned by their respective copyright owners.
  11:Src/usbd_cdc_if.c ****   *
  12:Src/usbd_cdc_if.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  13:Src/usbd_cdc_if.c ****   * All rights reserved.
  14:Src/usbd_cdc_if.c ****   *
  15:Src/usbd_cdc_if.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/usbd_cdc_if.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer.
  20:Src/usbd_cdc_if.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/usbd_cdc_if.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/usbd_cdc_if.c ****   *    and/or other materials provided with the distribution.
  23:Src/usbd_cdc_if.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/usbd_cdc_if.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/usbd_cdc_if.c ****   *    derived from this software without specific written permission.
  26:Src/usbd_cdc_if.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/usbd_cdc_if.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/usbd_cdc_if.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/usbd_cdc_if.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/usbd_cdc_if.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/usbd_cdc_if.c ****   *    this license. 
  32:Src/usbd_cdc_if.c ****   *
ARM GAS  /tmp/cceOpPjb.s 			page 2


  33:Src/usbd_cdc_if.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/usbd_cdc_if.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/usbd_cdc_if.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/usbd_cdc_if.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/usbd_cdc_if.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/usbd_cdc_if.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/usbd_cdc_if.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/usbd_cdc_if.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/usbd_cdc_if.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/usbd_cdc_if.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/usbd_cdc_if.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/usbd_cdc_if.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/usbd_cdc_if.c ****   *
  46:Src/usbd_cdc_if.c ****   ******************************************************************************
  47:Src/usbd_cdc_if.c **** */
  48:Src/usbd_cdc_if.c **** 
  49:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  51:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  52:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  55:Src/usbd_cdc_if.c ****   * @{
  56:Src/usbd_cdc_if.c ****   */
  57:Src/usbd_cdc_if.c **** 
  58:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC 
  59:Src/usbd_cdc_if.c ****   * @brief usbd core module
  60:Src/usbd_cdc_if.c ****   * @{
  61:Src/usbd_cdc_if.c ****   */ 
  62:Src/usbd_cdc_if.c **** 
  63:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_TypesDefinitions
  64:Src/usbd_cdc_if.c ****   * @{
  65:Src/usbd_cdc_if.c ****   */ 
  66:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  67:Src/usbd_cdc_if.c **** USB_Dev USB_S =
  68:Src/usbd_cdc_if.c **** {
  69:Src/usbd_cdc_if.c **** 	0,
  70:Src/usbd_cdc_if.c **** 	{0x0D,0x0A},
  71:Src/usbd_cdc_if.c **** 	0,
  72:Src/usbd_cdc_if.c **** 	0,
  73:Src/usbd_cdc_if.c **** };
  74:Src/usbd_cdc_if.c **** 
  75:Src/usbd_cdc_if.c **** 
  76:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */ 
  77:Src/usbd_cdc_if.c **** /**
  78:Src/usbd_cdc_if.c ****   * @}
  79:Src/usbd_cdc_if.c ****   */ 
  80:Src/usbd_cdc_if.c **** 
  81:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Defines
  82:Src/usbd_cdc_if.c ****   * @{
  83:Src/usbd_cdc_if.c ****   */ 
  84:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  85:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  86:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  87:Src/usbd_cdc_if.c **** // #define APP_RX_DATA_SIZE  2048
  88:Src/usbd_cdc_if.c **** // #define APP_TX_DATA_SIZE  2048
  89:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
ARM GAS  /tmp/cceOpPjb.s 			page 3


  90:Src/usbd_cdc_if.c **** /**
  91:Src/usbd_cdc_if.c ****   * @}
  92:Src/usbd_cdc_if.c ****   */ 
  93:Src/usbd_cdc_if.c **** 
  94:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Macros
  95:Src/usbd_cdc_if.c ****   * @{
  96:Src/usbd_cdc_if.c ****   */ 
  97:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  98:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  99:Src/usbd_cdc_if.c **** 
 100:Src/usbd_cdc_if.c **** /**
 101:Src/usbd_cdc_if.c ****   * @}
 102:Src/usbd_cdc_if.c ****   */ 
 103:Src/usbd_cdc_if.c ****   
 104:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_Variables
 105:Src/usbd_cdc_if.c ****   * @{
 106:Src/usbd_cdc_if.c ****   */
 107:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
 108:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
 109:Src/usbd_cdc_if.c **** /* Received Data over USB are stored in this buffer       */
 110:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
 111:Src/usbd_cdc_if.c **** 
 112:Src/usbd_cdc_if.c **** /* Send Data over USB CDC are stored in this buffer       */
 113:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 114:Src/usbd_cdc_if.c **** 
 115:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 116:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 117:Src/usbd_cdc_if.c **** 
 118:Src/usbd_cdc_if.c **** /**
 119:Src/usbd_cdc_if.c ****   * @}
 120:Src/usbd_cdc_if.c ****   */ 
 121:Src/usbd_cdc_if.c ****   
 122:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables
 123:Src/usbd_cdc_if.c ****   * @{
 124:Src/usbd_cdc_if.c ****   */ 
 125:Src/usbd_cdc_if.c ****   extern USBD_HandleTypeDef hUsbDeviceFS;
 126:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 127:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** /**
 130:Src/usbd_cdc_if.c ****   * @}
 131:Src/usbd_cdc_if.c ****   */ 
 132:Src/usbd_cdc_if.c ****   
 133:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_Private_FunctionPrototypes
 134:Src/usbd_cdc_if.c ****   * @{
 135:Src/usbd_cdc_if.c ****   */
 136:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS     (void);
 137:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS   (void);
 138:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS  (uint8_t cmd, uint8_t* pbuf, uint16_t length);
 139:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS  (uint8_t* pbuf, uint32_t *Len);
 140:Src/usbd_cdc_if.c **** 
 141:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 142:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 143:Src/usbd_cdc_if.c **** 
 144:Src/usbd_cdc_if.c **** /**
 145:Src/usbd_cdc_if.c ****   * @}
 146:Src/usbd_cdc_if.c ****   */ 
ARM GAS  /tmp/cceOpPjb.s 			page 4


 147:Src/usbd_cdc_if.c ****   
 148:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS = 
 149:Src/usbd_cdc_if.c **** {
 150:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 151:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
 152:Src/usbd_cdc_if.c ****   CDC_Control_FS,  
 153:Src/usbd_cdc_if.c ****   CDC_Receive_FS
 154:Src/usbd_cdc_if.c **** };
 155:Src/usbd_cdc_if.c **** 
 156:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 157:Src/usbd_cdc_if.c **** /**
 158:Src/usbd_cdc_if.c ****   * @brief  CDC_Init_FS
 159:Src/usbd_cdc_if.c ****   *         Initializes the CDC media low layer over the FS USB IP
 160:Src/usbd_cdc_if.c ****   * @param  None
 161:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 162:Src/usbd_cdc_if.c ****   */
 163:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 164:Src/usbd_cdc_if.c **** { 
 165:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */ 
 166:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 167:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 168:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 169:Src/usbd_cdc_if.c ****   return (USBD_OK);
 170:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */ 
 171:Src/usbd_cdc_if.c **** }
 172:Src/usbd_cdc_if.c **** 
 173:Src/usbd_cdc_if.c **** /**
 174:Src/usbd_cdc_if.c ****   * @brief  CDC_DeInit_FS
 175:Src/usbd_cdc_if.c ****   *         DeInitializes the CDC media low layer
 176:Src/usbd_cdc_if.c ****   * @param  None
 177:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 178:Src/usbd_cdc_if.c ****   */
 179:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 180:Src/usbd_cdc_if.c **** {
  27              		.loc 1 180 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 181:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */ 
 182:Src/usbd_cdc_if.c ****   return (USBD_OK);
 183:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */ 
 184:Src/usbd_cdc_if.c **** }
  32              		.loc 1 184 0
  33 0000 0020     		movs	r0, #0
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE65:
  38              		.section	.text.CDC_Control_FS,"ax",%progbits
  39              		.align	2
  40              		.thumb
  41              		.thumb_func
  43              	CDC_Control_FS:
  44              	.LFB66:
 185:Src/usbd_cdc_if.c **** 
 186:Src/usbd_cdc_if.c **** /**
 187:Src/usbd_cdc_if.c ****   * @brief  CDC_Control_FS
ARM GAS  /tmp/cceOpPjb.s 			page 5


 188:Src/usbd_cdc_if.c ****   *         Manage the CDC class requests
 189:Src/usbd_cdc_if.c ****   * @param  cmd: Command code            
 190:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 191:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 192:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 193:Src/usbd_cdc_if.c ****   */
 194:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS  (uint8_t cmd, uint8_t* pbuf, uint16_t length)
 195:Src/usbd_cdc_if.c **** { 
  45              		.loc 1 195 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50              	.LVL0:
 196:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 197:Src/usbd_cdc_if.c ****   switch (cmd)
 198:Src/usbd_cdc_if.c ****   {
 199:Src/usbd_cdc_if.c ****   case CDC_SEND_ENCAPSULATED_COMMAND:
 200:Src/usbd_cdc_if.c ****  
 201:Src/usbd_cdc_if.c ****     break;
 202:Src/usbd_cdc_if.c **** 
 203:Src/usbd_cdc_if.c ****   case CDC_GET_ENCAPSULATED_RESPONSE:
 204:Src/usbd_cdc_if.c ****  
 205:Src/usbd_cdc_if.c ****     break;
 206:Src/usbd_cdc_if.c **** 
 207:Src/usbd_cdc_if.c ****   case CDC_SET_COMM_FEATURE:
 208:Src/usbd_cdc_if.c ****  
 209:Src/usbd_cdc_if.c ****     break;
 210:Src/usbd_cdc_if.c **** 
 211:Src/usbd_cdc_if.c ****   case CDC_GET_COMM_FEATURE:
 212:Src/usbd_cdc_if.c **** 
 213:Src/usbd_cdc_if.c ****     break;
 214:Src/usbd_cdc_if.c **** 
 215:Src/usbd_cdc_if.c ****   case CDC_CLEAR_COMM_FEATURE:
 216:Src/usbd_cdc_if.c **** 
 217:Src/usbd_cdc_if.c ****     break;
 218:Src/usbd_cdc_if.c **** 
 219:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 220:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 221:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 222:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 223:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 224:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 225:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 226:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 227:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 228:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 229:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 230:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */ 
 231:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 232:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 233:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 234:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 235:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 236:Src/usbd_cdc_if.c ****   case CDC_SET_LINE_CODING:   
 237:Src/usbd_cdc_if.c **** 	
 238:Src/usbd_cdc_if.c ****     break;
ARM GAS  /tmp/cceOpPjb.s 			page 6


 239:Src/usbd_cdc_if.c **** 
 240:Src/usbd_cdc_if.c ****   case CDC_GET_LINE_CODING:     
 241:Src/usbd_cdc_if.c **** 
 242:Src/usbd_cdc_if.c ****     break;
 243:Src/usbd_cdc_if.c **** 
 244:Src/usbd_cdc_if.c ****   case CDC_SET_CONTROL_LINE_STATE:
 245:Src/usbd_cdc_if.c **** 
 246:Src/usbd_cdc_if.c ****     break;
 247:Src/usbd_cdc_if.c **** 
 248:Src/usbd_cdc_if.c ****   case CDC_SEND_BREAK:
 249:Src/usbd_cdc_if.c ****  
 250:Src/usbd_cdc_if.c ****     break;    
 251:Src/usbd_cdc_if.c ****     
 252:Src/usbd_cdc_if.c ****   default:
 253:Src/usbd_cdc_if.c ****     break;
 254:Src/usbd_cdc_if.c ****   }
 255:Src/usbd_cdc_if.c **** 
 256:Src/usbd_cdc_if.c ****   return (USBD_OK);
 257:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 258:Src/usbd_cdc_if.c **** }
  51              		.loc 1 258 0
  52 0000 0020     		movs	r0, #0
  53              	.LVL1:
  54 0002 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE66:
  58              		.section	.text.CDC_Receive_FS,"ax",%progbits
  59              		.align	2
  60              		.thumb
  61              		.thumb_func
  63              	CDC_Receive_FS:
  64              	.LFB67:
 259:Src/usbd_cdc_if.c **** 
 260:Src/usbd_cdc_if.c **** /**
 261:Src/usbd_cdc_if.c ****   * @brief  CDC_Receive_FS
 262:Src/usbd_cdc_if.c ****   *         Data received over USB OUT endpoint are sent over CDC interface 
 263:Src/usbd_cdc_if.c ****   *         through this function.
 264:Src/usbd_cdc_if.c ****   *           
 265:Src/usbd_cdc_if.c ****   *         @note
 266:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint 
 267:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
 268:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result 
 269:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 270:Src/usbd_cdc_if.c ****   *                 
 271:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 272:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 273:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 274:Src/usbd_cdc_if.c ****   */
 275:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS (uint8_t* Buf, uint32_t *Len)
 276:Src/usbd_cdc_if.c **** {
  65              		.loc 1 276 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL2:
  70 0000 38B5     		push	{r3, r4, r5, lr}
  71              	.LCFI0:
ARM GAS  /tmp/cceOpPjb.s 			page 7


  72              		.cfi_def_cfa_offset 16
  73              		.cfi_offset 3, -16
  74              		.cfi_offset 4, -12
  75              		.cfi_offset 5, -8
  76              		.cfi_offset 14, -4
 277:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 278:Src/usbd_cdc_if.c ****   // USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 279:Src/usbd_cdc_if.c ****   // USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 280:Src/usbd_cdc_if.c ****   // return (USBD_OK);
 281:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */ 
 282:Src/usbd_cdc_if.c ****   
 283:Src/usbd_cdc_if.c **** 	if(USB_S.OutFlag){
  77              		.loc 1 283 0
  78 0002 134B     		ldr	r3, .L8
  79 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80 0006 1BB1     		cbz	r3, .L4
 284:Src/usbd_cdc_if.c **** 		USB_S.OutFlag = 0;
  81              		.loc 1 284 0
  82 0008 114B     		ldr	r3, .L8
  83 000a 0022     		movs	r2, #0
  84 000c 1A70     		strb	r2, [r3]
 285:Src/usbd_cdc_if.c **** 		USB_S.ReLen = 0;
  85              		.loc 1 285 0
  86 000e 9A80     		strh	r2, [r3, #4]	@ movhi
  87              	.L4:
 286:Src/usbd_cdc_if.c **** 	}
 287:Src/usbd_cdc_if.c ****   
 288:Src/usbd_cdc_if.c **** 	//将已接收数据长度赋值给USB_S.ReLen
 289:Src/usbd_cdc_if.c ****     USB_S.ReLen = *Len; 
  88              		.loc 1 289 0
  89 0010 0B68     		ldr	r3, [r1]
  90 0012 0F4C     		ldr	r4, .L8
  91 0014 A380     		strh	r3, [r4, #4]	@ movhi
 290:Src/usbd_cdc_if.c **** 	
 291:Src/usbd_cdc_if.c **** 	//设置接收数据的位置
 292:Src/usbd_cdc_if.c **** 	USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
  92              		.loc 1 292 0
  93 0016 0F4D     		ldr	r5, .L8+4
  94 0018 0F49     		ldr	r1, .L8+8
  95              	.LVL3:
  96 001a 2846     		mov	r0, r5
  97              	.LVL4:
  98 001c FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
  99              	.LVL5:
 293:Src/usbd_cdc_if.c **** 	USBD_CDC_ReceivePacket(&hUsbDeviceFS);   //准备接收数据
 100              		.loc 1 293 0
 101 0020 2846     		mov	r0, r5
 102 0022 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 103              	.LVL6:
 294:Src/usbd_cdc_if.c **** 	
 295:Src/usbd_cdc_if.c **** 	//判断是否有结束标志以及接收数据长度是否达到UserRxBufferFS长度上限
 296:Src/usbd_cdc_if.c **** 	if((USB_S.ReLen >= APP_RX_DATA_SIZE) || \
 104              		.loc 1 296 0
 105 0026 A388     		ldrh	r3, [r4, #4]
 106 0028 B3F5006F 		cmp	r3, #2048
 107 002c 0BD2     		bcs	.L5
 297:Src/usbd_cdc_if.c **** 	   (UserRxBufferFS[USB_S.ReLen-2] == USB_S.EFlag[0] && \
ARM GAS  /tmp/cceOpPjb.s 			page 8


 108              		.loc 1 297 0 discriminator 1
 109 002e 9A1E     		subs	r2, r3, #2
 110 0030 0949     		ldr	r1, .L8+8
 111 0032 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 112 0034 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 296:Src/usbd_cdc_if.c **** 	   (UserRxBufferFS[USB_S.ReLen-2] == USB_S.EFlag[0] && \
 113              		.loc 1 296 0 discriminator 1
 114 0036 9142     		cmp	r1, r2
 115 0038 08D1     		bne	.L6
 298:Src/usbd_cdc_if.c **** 		UserRxBufferFS[USB_S.ReLen-1] == USB_S.EFlag[1])) {
 116              		.loc 1 298 0
 117 003a 013B     		subs	r3, r3, #1
 118 003c 064A     		ldr	r2, .L8+8
 119 003e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 120 0040 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 297:Src/usbd_cdc_if.c **** 	   (UserRxBufferFS[USB_S.ReLen-2] == USB_S.EFlag[0] && \
 121              		.loc 1 297 0
 122 0042 9A42     		cmp	r2, r3
 123 0044 02D1     		bne	.L6
 124              	.L5:
 299:Src/usbd_cdc_if.c **** 	  USB_S.OutFlag = 1;
 125              		.loc 1 299 0
 126 0046 0122     		movs	r2, #1
 127 0048 014B     		ldr	r3, .L8
 128 004a 1A70     		strb	r2, [r3]
 129              	.L6:
 300:Src/usbd_cdc_if.c **** 	}
 301:Src/usbd_cdc_if.c **** 
 302:Src/usbd_cdc_if.c **** 	return (USBD_OK); 
 303:Src/usbd_cdc_if.c **** }
 130              		.loc 1 303 0
 131 004c 0020     		movs	r0, #0
 132 004e 38BD     		pop	{r3, r4, r5, pc}
 133              	.L9:
 134              		.align	2
 135              	.L8:
 136 0050 00000000 		.word	.LANCHOR0
 137 0054 00000000 		.word	hUsbDeviceFS
 138 0058 00000000 		.word	UserRxBufferFS
 139              		.cfi_endproc
 140              	.LFE67:
 142              		.section	.text.CDC_Init_FS,"ax",%progbits
 143              		.align	2
 144              		.thumb
 145              		.thumb_func
 147              	CDC_Init_FS:
 148              	.LFB64:
 164:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */ 
 149              		.loc 1 164 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 10B5     		push	{r4, lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 4, -8
 157              		.cfi_offset 14, -4
ARM GAS  /tmp/cceOpPjb.s 			page 9


 167:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 158              		.loc 1 167 0
 159 0002 064C     		ldr	r4, .L12
 160 0004 0022     		movs	r2, #0
 161 0006 0649     		ldr	r1, .L12+4
 162 0008 2046     		mov	r0, r4
 163 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 164              	.LVL7:
 168:Src/usbd_cdc_if.c ****   return (USBD_OK);
 165              		.loc 1 168 0
 166 000e 0549     		ldr	r1, .L12+8
 167 0010 2046     		mov	r0, r4
 168 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 169              	.LVL8:
 171:Src/usbd_cdc_if.c **** 
 170              		.loc 1 171 0
 171 0016 0020     		movs	r0, #0
 172 0018 10BD     		pop	{r4, pc}
 173              	.L13:
 174 001a 00BF     		.align	2
 175              	.L12:
 176 001c 00000000 		.word	hUsbDeviceFS
 177 0020 00000000 		.word	UserTxBufferFS
 178 0024 00000000 		.word	UserRxBufferFS
 179              		.cfi_endproc
 180              	.LFE64:
 182              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 183              		.align	2
 184              		.global	CDC_Transmit_FS
 185              		.thumb
 186              		.thumb_func
 188              	CDC_Transmit_FS:
 189              	.LFB68:
 304:Src/usbd_cdc_if.c **** 
 305:Src/usbd_cdc_if.c **** /**
 306:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 307:Src/usbd_cdc_if.c ****   *         Data send over USB IN endpoint are sent over CDC interface 
 308:Src/usbd_cdc_if.c ****   *         through this function.           
 309:Src/usbd_cdc_if.c ****   *         @note
 310:Src/usbd_cdc_if.c ****   *         
 311:Src/usbd_cdc_if.c ****   *                 
 312:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be send
 313:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be send (in bytes)
 314:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 315:Src/usbd_cdc_if.c ****   */
 316:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
 317:Src/usbd_cdc_if.c **** {
 190              		.loc 1 317 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              	.LVL9:
 318:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 319:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */ 
 320:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 195              		.loc 1 320 0
 196 0000 094B     		ldr	r3, .L19
ARM GAS  /tmp/cceOpPjb.s 			page 10


 197 0002 D3F81832 		ldr	r3, [r3, #536]
 198              	.LVL10:
 321:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 199              		.loc 1 321 0
 200 0006 D3F81432 		ldr	r3, [r3, #532]
 201              	.LVL11:
 202 000a 53B9     		cbnz	r3, .L16
 317:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 203              		.loc 1 317 0
 204 000c 10B5     		push	{r4, lr}
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 4, -8
 208              		.cfi_offset 14, -4
 209 000e 0A46     		mov	r2, r1
 210 0010 0146     		mov	r1, r0
 211              	.LVL12:
 322:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 323:Src/usbd_cdc_if.c ****   }
 324:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 212              		.loc 1 324 0
 213 0012 054C     		ldr	r4, .L19
 214              	.LVL13:
 215 0014 2046     		mov	r0, r4
 216              	.LVL14:
 217 0016 FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 218              	.LVL15:
 325:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 219              		.loc 1 325 0
 220 001a 2046     		mov	r0, r4
 221 001c FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 222              	.LVL16:
 326:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */ 
 327:Src/usbd_cdc_if.c ****   return result;
 223              		.loc 1 327 0
 224 0020 10BD     		pop	{r4, pc}
 225              	.LVL17:
 226              	.L16:
 227              	.LCFI3:
 228              		.cfi_def_cfa_offset 0
 229              		.cfi_restore 4
 230              		.cfi_restore 14
 322:Src/usbd_cdc_if.c ****   }
 231              		.loc 1 322 0
 232 0022 0120     		movs	r0, #1
 233              	.LVL18:
 234 0024 7047     		bx	lr
 235              	.L20:
 236 0026 00BF     		.align	2
 237              	.L19:
 238 0028 00000000 		.word	hUsbDeviceFS
 239              		.cfi_endproc
 240              	.LFE68:
 242              		.global	USBD_Interface_fops_FS
 243              		.comm	UserTxBufferFS,2048,4
 244              		.global	USB_S
 245              		.comm	UserRxBufferFS,2048,4
ARM GAS  /tmp/cceOpPjb.s 			page 11


 246              		.section	.data.USB_S,"aw",%progbits
 247              		.align	2
 248              		.set	.LANCHOR0,. + 0
 251              	USB_S:
 252 0000 00       		.byte	0
 253 0001 0D       		.byte	13
 254 0002 0A       		.byte	10
 255 0003 00       		.byte	0
 256 0004 0000     		.short	0
 257              		.section	.data.USBD_Interface_fops_FS,"aw",%progbits
 258              		.align	2
 261              	USBD_Interface_fops_FS:
 262 0000 00000000 		.word	CDC_Init_FS
 263 0004 00000000 		.word	CDC_DeInit_FS
 264 0008 00000000 		.word	CDC_Control_FS
 265 000c 00000000 		.word	CDC_Receive_FS
 266              		.text
 267              	.Letext0:
 268              		.file 2 "/opt/toolchain/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.
 269              		.file 3 "/opt/toolchain/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 270              		.file 4 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 271              		.file 5 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 272              		.file 6 "Inc/usbd_cdc_if.h"
 273              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cceOpPjb.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_cdc_if.c
     /tmp/cceOpPjb.s:20     .text.CDC_DeInit_FS:00000000 $t
     /tmp/cceOpPjb.s:24     .text.CDC_DeInit_FS:00000000 CDC_DeInit_FS
     /tmp/cceOpPjb.s:39     .text.CDC_Control_FS:00000000 $t
     /tmp/cceOpPjb.s:43     .text.CDC_Control_FS:00000000 CDC_Control_FS
     /tmp/cceOpPjb.s:59     .text.CDC_Receive_FS:00000000 $t
     /tmp/cceOpPjb.s:63     .text.CDC_Receive_FS:00000000 CDC_Receive_FS
     /tmp/cceOpPjb.s:136    .text.CDC_Receive_FS:00000050 $d
                            *COM*:00000800 UserRxBufferFS
     /tmp/cceOpPjb.s:143    .text.CDC_Init_FS:00000000 $t
     /tmp/cceOpPjb.s:147    .text.CDC_Init_FS:00000000 CDC_Init_FS
     /tmp/cceOpPjb.s:176    .text.CDC_Init_FS:0000001c $d
                            *COM*:00000800 UserTxBufferFS
     /tmp/cceOpPjb.s:183    .text.CDC_Transmit_FS:00000000 $t
     /tmp/cceOpPjb.s:188    .text.CDC_Transmit_FS:00000000 CDC_Transmit_FS
     /tmp/cceOpPjb.s:238    .text.CDC_Transmit_FS:00000028 $d
     /tmp/cceOpPjb.s:261    .data.USBD_Interface_fops_FS:00000000 USBD_Interface_fops_FS
     /tmp/cceOpPjb.s:251    .data.USB_S:00000000 USB_S
     /tmp/cceOpPjb.s:247    .data.USB_S:00000000 $d
     /tmp/cceOpPjb.s:258    .data.USBD_Interface_fops_FS:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USBD_CDC_SetRxBuffer
USBD_CDC_ReceivePacket
hUsbDeviceFS
USBD_CDC_SetTxBuffer
USBD_CDC_TransmitPacket
