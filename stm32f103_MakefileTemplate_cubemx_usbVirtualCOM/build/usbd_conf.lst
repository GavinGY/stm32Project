ARM GAS  /tmp/ccfbHqKe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"usbd_conf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_PCD_MspInit
  22              		.thumb
  23              		.thumb_func
  25              	HAL_PCD_MspInit:
  26              	.LFB64:
  27              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   4:Src/usbd_conf.c ****   * @version        : v2.0_Cube
   5:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbd_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_conf.c ****   *
  13:Src/usbd_conf.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/usbd_conf.c ****   * All rights reserved.
  15:Src/usbd_conf.c ****   *
  16:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_conf.c ****   *
  19:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccfbHqKe.s 			page 2


  32:Src/usbd_conf.c ****   *    this license. 
  33:Src/usbd_conf.c ****   *
  34:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_conf.c ****   *
  47:Src/usbd_conf.c ****   ******************************************************************************
  48:Src/usbd_conf.c **** */
  49:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbd_conf.c **** #include "stm32f1xx.h"
  51:Src/usbd_conf.c **** #include "stm32f1xx_hal.h"
  52:Src/usbd_conf.c **** #include "usbd_def.h"
  53:Src/usbd_conf.c **** #include "usbd_core.h"
  54:Src/usbd_conf.c **** #include "usbd_cdc.h"
  55:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  56:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  57:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  58:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd_USB_FS;
  60:Src/usbd_conf.c **** void _Error_Handler(char * file, int line);
  61:Src/usbd_conf.c **** 
  62:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  63:Src/usbd_conf.c **** /* USER CODE END 0 */
  64:Src/usbd_conf.c **** 
  65:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  66:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  67:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
  68:Src/usbd_conf.c **** /* USER CODE END 1 */
  69:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state);
  70:Src/usbd_conf.c **** 
  71:Src/usbd_conf.c **** /*******************************************************************************
  72:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  73:Src/usbd_conf.c **** *******************************************************************************/
  74:Src/usbd_conf.c **** /* MSP Init */
  75:Src/usbd_conf.c **** 
  76:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
  77:Src/usbd_conf.c **** {
  28              		.loc 1 77 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  78:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  33              		.loc 1 78 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 0E4B     		ldr	r3, .L5
  36 0004 9A42     		cmp	r2, r3
  37 0006 17D1     		bne	.L4
ARM GAS  /tmp/ccfbHqKe.s 			page 3


  77:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  38              		.loc 1 77 0
  39 0008 00B5     		push	{lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 14, -4
  43 000a 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46              	.LBB2:
  79:Src/usbd_conf.c ****   {
  80:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 0 */
  81:Src/usbd_conf.c **** 
  82:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 0 */
  83:Src/usbd_conf.c ****     /* Peripheral clock enable */
  84:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_ENABLE();
  47              		.loc 1 84 0
  48 000c 03F5DA33 		add	r3, r3, #111616
  49 0010 DA69     		ldr	r2, [r3, #28]
  50 0012 42F40002 		orr	r2, r2, #8388608
  51 0016 DA61     		str	r2, [r3, #28]
  52 0018 DB69     		ldr	r3, [r3, #28]
  53 001a 03F40003 		and	r3, r3, #8388608
  54 001e 0193     		str	r3, [sp, #4]
  55 0020 019B     		ldr	r3, [sp, #4]
  56              	.LBE2:
  85:Src/usbd_conf.c **** 
  86:Src/usbd_conf.c ****     /* Peripheral interrupt init */
  87:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
  57              		.loc 1 87 0
  58 0022 0022     		movs	r2, #0
  59 0024 1146     		mov	r1, r2
  60 0026 1420     		movs	r0, #20
  61              	.LVL1:
  62 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  63              	.LVL2:
  88:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
  64              		.loc 1 88 0
  65 002c 1420     		movs	r0, #20
  66 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  67              	.LVL3:
  89:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 1 */
  90:Src/usbd_conf.c **** 
  91:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 1 */
  92:Src/usbd_conf.c ****   }
  93:Src/usbd_conf.c **** }
  68              		.loc 1 93 0
  69 0032 03B0     		add	sp, sp, #12
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 4
  72              		@ sp needed
  73 0034 5DF804FB 		ldr	pc, [sp], #4
  74              	.LVL4:
  75              	.L4:
  76              	.LCFI3:
  77              		.cfi_def_cfa_offset 0
  78              		.cfi_restore 14
ARM GAS  /tmp/ccfbHqKe.s 			page 4


  79 0038 7047     		bx	lr
  80              	.L6:
  81 003a 00BF     		.align	2
  82              	.L5:
  83 003c 005C0040 		.word	1073765376
  84              		.cfi_endproc
  85              	.LFE64:
  87              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
  88              		.align	2
  89              		.global	HAL_PCD_MspDeInit
  90              		.thumb
  91              		.thumb_func
  93              	HAL_PCD_MspDeInit:
  94              	.LFB65:
  94:Src/usbd_conf.c **** 
  95:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
  96:Src/usbd_conf.c **** {
  95              		.loc 1 96 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              	.LVL5:
 100 0000 08B5     		push	{r3, lr}
 101              	.LCFI4:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
  97:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
 105              		.loc 1 97 0
 106 0002 0268     		ldr	r2, [r0]
 107 0004 054B     		ldr	r3, .L10
 108 0006 9A42     		cmp	r2, r3
 109 0008 07D1     		bne	.L7
  98:Src/usbd_conf.c ****   {
  99:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
 100:Src/usbd_conf.c **** 
 101:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 0 */
 102:Src/usbd_conf.c ****     /* Peripheral clock disable */
 103:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_DISABLE();
 110              		.loc 1 103 0
 111 000a 054A     		ldr	r2, .L10+4
 112 000c D369     		ldr	r3, [r2, #28]
 113 000e 23F40003 		bic	r3, r3, #8388608
 114 0012 D361     		str	r3, [r2, #28]
 104:Src/usbd_conf.c **** 
 105:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 106:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN1_RX0_IRQn);
 115              		.loc 1 106 0
 116 0014 1420     		movs	r0, #20
 117              	.LVL6:
 118 0016 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 119              	.LVL7:
 120              	.L7:
 121 001a 08BD     		pop	{r3, pc}
 122              	.L11:
 123              		.align	2
 124              	.L10:
ARM GAS  /tmp/ccfbHqKe.s 			page 5


 125 001c 005C0040 		.word	1073765376
 126 0020 00100240 		.word	1073876992
 127              		.cfi_endproc
 128              	.LFE65:
 130              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 131              		.align	2
 132              		.global	HAL_PCD_SetupStageCallback
 133              		.thumb
 134              		.thumb_func
 136              	HAL_PCD_SetupStageCallback:
 137              	.LFB66:
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 109:Src/usbd_conf.c **** 
 110:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 1 */
 111:Src/usbd_conf.c ****   }
 112:Src/usbd_conf.c **** }
 113:Src/usbd_conf.c **** 
 114:Src/usbd_conf.c **** /**
 115:Src/usbd_conf.c ****   * @brief  Setup Stage callback
 116:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 117:Src/usbd_conf.c ****   * @retval None
 118:Src/usbd_conf.c ****   */
 119:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 120:Src/usbd_conf.c **** {
 138              		.loc 1 120 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              	.LVL8:
 143 0000 08B5     		push	{r3, lr}
 144              	.LCFI5:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
 121:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 148              		.loc 1 121 0
 149 0002 00F22C41 		addw	r1, r0, #1068
 150 0006 D0F85C04 		ldr	r0, [r0, #1116]
 151              	.LVL9:
 152 000a FFF7FEFF 		bl	USBD_LL_SetupStage
 153              	.LVL10:
 154 000e 08BD     		pop	{r3, pc}
 155              		.cfi_endproc
 156              	.LFE66:
 158              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 159              		.align	2
 160              		.global	HAL_PCD_DataOutStageCallback
 161              		.thumb
 162              		.thumb_func
 164              	HAL_PCD_DataOutStageCallback:
 165              	.LFB67:
 122:Src/usbd_conf.c **** }
 123:Src/usbd_conf.c **** 
 124:Src/usbd_conf.c **** /**
 125:Src/usbd_conf.c ****   * @brief  Data Out Stage callback.
 126:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
ARM GAS  /tmp/ccfbHqKe.s 			page 6


 127:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 128:Src/usbd_conf.c ****   * @retval None
 129:Src/usbd_conf.c ****   */
 130:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 131:Src/usbd_conf.c **** {
 166              		.loc 1 131 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              	.LVL11:
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI6:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 132:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 176              		.loc 1 132 0
 177 0002 00EB4113 		add	r3, r0, r1, lsl #5
 178 0006 D3F83C22 		ldr	r2, [r3, #572]
 179 000a D0F85C04 		ldr	r0, [r0, #1116]
 180              	.LVL12:
 181 000e FFF7FEFF 		bl	USBD_LL_DataOutStage
 182              	.LVL13:
 183 0012 08BD     		pop	{r3, pc}
 184              		.cfi_endproc
 185              	.LFE67:
 187              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 188              		.align	2
 189              		.global	HAL_PCD_DataInStageCallback
 190              		.thumb
 191              		.thumb_func
 193              	HAL_PCD_DataInStageCallback:
 194              	.LFB68:
 133:Src/usbd_conf.c **** }
 134:Src/usbd_conf.c **** 
 135:Src/usbd_conf.c **** /**
 136:Src/usbd_conf.c ****   * @brief  Data In Stage callback..
 137:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 138:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 139:Src/usbd_conf.c ****   * @retval None
 140:Src/usbd_conf.c ****   */
 141:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 142:Src/usbd_conf.c **** {
 195              		.loc 1 142 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              	.LVL14:
 200 0000 08B5     		push	{r3, lr}
 201              	.LCFI7:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 3, -8
 204              		.cfi_offset 14, -4
 143:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 205              		.loc 1 143 0
 206 0002 00EB4113 		add	r3, r0, r1, lsl #5
 207 0006 DA6B     		ldr	r2, [r3, #60]
ARM GAS  /tmp/ccfbHqKe.s 			page 7


 208 0008 D0F85C04 		ldr	r0, [r0, #1116]
 209              	.LVL15:
 210 000c FFF7FEFF 		bl	USBD_LL_DataInStage
 211              	.LVL16:
 212 0010 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE68:
 216 0012 00BF     		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 217              		.align	2
 218              		.global	HAL_PCD_SOFCallback
 219              		.thumb
 220              		.thumb_func
 222              	HAL_PCD_SOFCallback:
 223              	.LFB69:
 144:Src/usbd_conf.c **** }
 145:Src/usbd_conf.c **** 
 146:Src/usbd_conf.c **** /**
 147:Src/usbd_conf.c ****   * @brief  SOF callback.
 148:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 149:Src/usbd_conf.c ****   * @retval None
 150:Src/usbd_conf.c ****   */
 151:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 152:Src/usbd_conf.c **** {
 224              		.loc 1 152 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL17:
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI8:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 153:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 234              		.loc 1 153 0
 235 0002 D0F85C04 		ldr	r0, [r0, #1116]
 236              	.LVL18:
 237 0006 FFF7FEFF 		bl	USBD_LL_SOF
 238              	.LVL19:
 239 000a 08BD     		pop	{r3, pc}
 240              		.cfi_endproc
 241              	.LFE69:
 243              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 244              		.align	2
 245              		.global	HAL_PCD_ResetCallback
 246              		.thumb
 247              		.thumb_func
 249              	HAL_PCD_ResetCallback:
 250              	.LFB70:
 154:Src/usbd_conf.c **** }
 155:Src/usbd_conf.c **** 
 156:Src/usbd_conf.c **** /**
 157:Src/usbd_conf.c ****   * @brief  Reset callback.
 158:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 159:Src/usbd_conf.c ****   * @retval None
 160:Src/usbd_conf.c ****   */
 161:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
ARM GAS  /tmp/ccfbHqKe.s 			page 8


 162:Src/usbd_conf.c **** { 
 251              		.loc 1 162 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL20:
 256 0000 10B5     		push	{r4, lr}
 257              	.LCFI9:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 14, -4
 261 0002 0446     		mov	r4, r0
 262              	.LVL21:
 163:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 164:Src/usbd_conf.c **** 
 165:Src/usbd_conf.c ****   /*Set USB Current Speed*/
 166:Src/usbd_conf.c ****   switch (hpcd->Init.speed)
 167:Src/usbd_conf.c ****   {
 168:Src/usbd_conf.c ****   case PCD_SPEED_FULL:
 169:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 170:Src/usbd_conf.c ****     break;
 171:Src/usbd_conf.c **** 	
 172:Src/usbd_conf.c ****   default:
 173:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 174:Src/usbd_conf.c ****     break;    
 175:Src/usbd_conf.c ****   }
 176:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);  
 263              		.loc 1 176 0
 264 0004 0121     		movs	r1, #1
 265 0006 D0F85C04 		ldr	r0, [r0, #1116]
 266              	.LVL22:
 267 000a FFF7FEFF 		bl	USBD_LL_SetSpeed
 268              	.LVL23:
 177:Src/usbd_conf.c ****   
 178:Src/usbd_conf.c ****   /*Reset Device*/
 179:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 269              		.loc 1 179 0
 270 000e D4F85C04 		ldr	r0, [r4, #1116]
 271 0012 FFF7FEFF 		bl	USBD_LL_Reset
 272              	.LVL24:
 273 0016 10BD     		pop	{r4, pc}
 274              		.cfi_endproc
 275              	.LFE70:
 277              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 278              		.align	2
 279              		.global	HAL_PCD_SuspendCallback
 280              		.thumb
 281              		.thumb_func
 283              	HAL_PCD_SuspendCallback:
 284              	.LFB71:
 180:Src/usbd_conf.c **** }
 181:Src/usbd_conf.c **** 
 182:Src/usbd_conf.c **** /**
 183:Src/usbd_conf.c ****   * @brief  Suspend callback.
 184:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 185:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 186:Src/usbd_conf.c ****   * @retval None
ARM GAS  /tmp/ccfbHqKe.s 			page 9


 187:Src/usbd_conf.c ****   */
 188:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 189:Src/usbd_conf.c **** {
 285              		.loc 1 189 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              	.LVL25:
 290 0000 10B5     		push	{r4, lr}
 291              	.LCFI10:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 295 0002 0446     		mov	r4, r0
 190:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode */
 191:Src/usbd_conf.c ****   USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 296              		.loc 1 191 0
 297 0004 D0F85C04 		ldr	r0, [r0, #1116]
 298              	.LVL26:
 299 0008 FFF7FEFF 		bl	USBD_LL_Suspend
 300              	.LVL27:
 192:Src/usbd_conf.c ****   /*Enter in STOP mode */
 193:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */  
 194:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 301              		.loc 1 194 0
 302 000c A369     		ldr	r3, [r4, #24]
 303 000e 23B1     		cbz	r3, .L22
 195:Src/usbd_conf.c ****   {
 196:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 197:Src/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 304              		.loc 1 197 0
 305 0010 024A     		ldr	r2, .L25
 306 0012 1369     		ldr	r3, [r2, #16]
 307 0014 43F00603 		orr	r3, r3, #6
 308 0018 1361     		str	r3, [r2, #16]
 309              	.L22:
 310 001a 10BD     		pop	{r4, pc}
 311              	.LVL28:
 312              	.L26:
 313              		.align	2
 314              	.L25:
 315 001c 00ED00E0 		.word	-536810240
 316              		.cfi_endproc
 317              	.LFE71:
 319              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 320              		.align	2
 321              		.global	HAL_PCD_ResumeCallback
 322              		.thumb
 323              		.thumb_func
 325              	HAL_PCD_ResumeCallback:
 326              	.LFB72:
 198:Src/usbd_conf.c ****   }
 199:Src/usbd_conf.c ****   /* USER CODE END 2 */
 200:Src/usbd_conf.c **** }
 201:Src/usbd_conf.c **** 
 202:Src/usbd_conf.c **** /**
 203:Src/usbd_conf.c ****   * @brief  Resume callback.
ARM GAS  /tmp/ccfbHqKe.s 			page 10


 204:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 205:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 206:Src/usbd_conf.c ****   * @retval None
 207:Src/usbd_conf.c ****   */
 208:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 209:Src/usbd_conf.c **** {
 327              		.loc 1 209 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              	.LVL29:
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI11:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 210:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 211:Src/usbd_conf.c ****   /* USER CODE END 3 */
 212:Src/usbd_conf.c ****   USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 337              		.loc 1 212 0
 338 0002 D0F85C04 		ldr	r0, [r0, #1116]
 339              	.LVL30:
 340 0006 FFF7FEFF 		bl	USBD_LL_Resume
 341              	.LVL31:
 342 000a 08BD     		pop	{r3, pc}
 343              		.cfi_endproc
 344              	.LFE72:
 346              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 347              		.align	2
 348              		.global	HAL_PCD_ISOOUTIncompleteCallback
 349              		.thumb
 350              		.thumb_func
 352              	HAL_PCD_ISOOUTIncompleteCallback:
 353              	.LFB73:
 213:Src/usbd_conf.c ****   
 214:Src/usbd_conf.c **** }
 215:Src/usbd_conf.c **** 
 216:Src/usbd_conf.c **** /**
 217:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 218:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 219:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 220:Src/usbd_conf.c ****   * @retval None
 221:Src/usbd_conf.c ****   */
 222:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 223:Src/usbd_conf.c **** {
 354              		.loc 1 223 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              	.LVL32:
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI12:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 224:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 364              		.loc 1 224 0
ARM GAS  /tmp/ccfbHqKe.s 			page 11


 365 0002 D0F85C04 		ldr	r0, [r0, #1116]
 366              	.LVL33:
 367 0006 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 368              	.LVL34:
 369 000a 08BD     		pop	{r3, pc}
 370              		.cfi_endproc
 371              	.LFE73:
 373              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 374              		.align	2
 375              		.global	HAL_PCD_ISOINIncompleteCallback
 376              		.thumb
 377              		.thumb_func
 379              	HAL_PCD_ISOINIncompleteCallback:
 380              	.LFB74:
 225:Src/usbd_conf.c **** }
 226:Src/usbd_conf.c **** 
 227:Src/usbd_conf.c **** /**
 228:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 229:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 230:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 231:Src/usbd_conf.c ****   * @retval None
 232:Src/usbd_conf.c ****   */
 233:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 234:Src/usbd_conf.c **** {
 381              		.loc 1 234 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              	.LVL35:
 386 0000 08B5     		push	{r3, lr}
 387              	.LCFI13:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 3, -8
 390              		.cfi_offset 14, -4
 235:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 391              		.loc 1 235 0
 392 0002 D0F85C04 		ldr	r0, [r0, #1116]
 393              	.LVL36:
 394 0006 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 395              	.LVL37:
 396 000a 08BD     		pop	{r3, pc}
 397              		.cfi_endproc
 398              	.LFE74:
 400              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 401              		.align	2
 402              		.global	HAL_PCD_ConnectCallback
 403              		.thumb
 404              		.thumb_func
 406              	HAL_PCD_ConnectCallback:
 407              	.LFB75:
 236:Src/usbd_conf.c **** }
 237:Src/usbd_conf.c **** 
 238:Src/usbd_conf.c **** /**
 239:Src/usbd_conf.c ****   * @brief  ConnectCallback callback.
 240:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 241:Src/usbd_conf.c ****   * @retval None
 242:Src/usbd_conf.c ****   */
ARM GAS  /tmp/ccfbHqKe.s 			page 12


 243:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 244:Src/usbd_conf.c **** {
 408              		.loc 1 244 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL38:
 413 0000 08B5     		push	{r3, lr}
 414              	.LCFI14:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
 245:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 418              		.loc 1 245 0
 419 0002 D0F85C04 		ldr	r0, [r0, #1116]
 420              	.LVL39:
 421 0006 FFF7FEFF 		bl	USBD_LL_DevConnected
 422              	.LVL40:
 423 000a 08BD     		pop	{r3, pc}
 424              		.cfi_endproc
 425              	.LFE75:
 427              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 428              		.align	2
 429              		.global	HAL_PCD_DisconnectCallback
 430              		.thumb
 431              		.thumb_func
 433              	HAL_PCD_DisconnectCallback:
 434              	.LFB76:
 246:Src/usbd_conf.c **** }
 247:Src/usbd_conf.c **** 
 248:Src/usbd_conf.c **** /**
 249:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 250:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 251:Src/usbd_conf.c ****   * @retval None
 252:Src/usbd_conf.c ****   */
 253:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 254:Src/usbd_conf.c **** {
 435              		.loc 1 254 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL41:
 440 0000 08B5     		push	{r3, lr}
 441              	.LCFI15:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 3, -8
 444              		.cfi_offset 14, -4
 255:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 445              		.loc 1 255 0
 446 0002 D0F85C04 		ldr	r0, [r0, #1116]
 447              	.LVL42:
 448 0006 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 449              	.LVL43:
 450 000a 08BD     		pop	{r3, pc}
 451              		.cfi_endproc
 452              	.LFE76:
 454              		.section	.text.USBD_LL_Init,"ax",%progbits
ARM GAS  /tmp/ccfbHqKe.s 			page 13


 455              		.align	2
 456              		.global	USBD_LL_Init
 457              		.thumb
 458              		.thumb_func
 460              	USBD_LL_Init:
 461              	.LFB77:
 256:Src/usbd_conf.c **** }
 257:Src/usbd_conf.c **** 
 258:Src/usbd_conf.c **** /*******************************************************************************
 259:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 260:Src/usbd_conf.c **** *******************************************************************************/
 261:Src/usbd_conf.c **** /**
 262:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 263:Src/usbd_conf.c ****   * @param  pdev: Device handle
 264:Src/usbd_conf.c ****   * @retval USBD Status
 265:Src/usbd_conf.c ****   */
 266:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Init (USBD_HandleTypeDef *pdev)
 267:Src/usbd_conf.c **** { 
 462              		.loc 1 267 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              	.LVL44:
 467 0000 10B5     		push	{r4, lr}
 468              	.LCFI16:
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 4, -8
 471              		.cfi_offset 14, -4
 472 0002 0446     		mov	r4, r0
 268:Src/usbd_conf.c ****   /* Init USB_IP */
 269:Src/usbd_conf.c ****   /* Link The driver to the stack */
 270:Src/usbd_conf.c ****   hpcd_USB_FS.pData = pdev;
 473              		.loc 1 270 0
 474 0004 1F48     		ldr	r0, .L40
 475              	.LVL45:
 476 0006 C0F85C44 		str	r4, [r0, #1116]
 271:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 477              		.loc 1 271 0
 478 000a C4F82002 		str	r0, [r4, #544]
 272:Src/usbd_conf.c **** 
 273:Src/usbd_conf.c ****   hpcd_USB_FS.Instance = USB;
 479              		.loc 1 273 0
 480 000e 1E4B     		ldr	r3, .L40+4
 481 0010 0360     		str	r3, [r0]
 274:Src/usbd_conf.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 482              		.loc 1 274 0
 483 0012 0823     		movs	r3, #8
 484 0014 4360     		str	r3, [r0, #4]
 275:Src/usbd_conf.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 485              		.loc 1 275 0
 486 0016 0223     		movs	r3, #2
 487 0018 8360     		str	r3, [r0, #8]
 276:Src/usbd_conf.c ****   hpcd_USB_FS.Init.ep0_mps = DEP0CTL_MPS_8;
 488              		.loc 1 276 0
 489 001a 0323     		movs	r3, #3
 490 001c C360     		str	r3, [r0, #12]
 277:Src/usbd_conf.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
ARM GAS  /tmp/ccfbHqKe.s 			page 14


 491              		.loc 1 277 0
 492 001e 0023     		movs	r3, #0
 493 0020 8361     		str	r3, [r0, #24]
 278:Src/usbd_conf.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 494              		.loc 1 278 0
 495 0022 C361     		str	r3, [r0, #28]
 279:Src/usbd_conf.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 496              		.loc 1 279 0
 497 0024 0362     		str	r3, [r0, #32]
 280:Src/usbd_conf.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 498              		.loc 1 280 0
 499 0026 FFF7FEFF 		bl	HAL_PCD_Init
 500              	.LVL46:
 501 002a 20B1     		cbz	r0, .L38
 281:Src/usbd_conf.c ****   {
 282:Src/usbd_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 502              		.loc 1 282 0
 503 002c 4FF48D71 		mov	r1, #282
 504 0030 1648     		ldr	r0, .L40+8
 505 0032 FFF7FEFF 		bl	_Error_Handler
 506              	.LVL47:
 507              	.L38:
 283:Src/usbd_conf.c ****   }
 284:Src/usbd_conf.c **** 
 285:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 508              		.loc 1 285 0
 509 0036 1823     		movs	r3, #24
 510 0038 0022     		movs	r2, #0
 511 003a 1146     		mov	r1, r2
 512 003c D4F82002 		ldr	r0, [r4, #544]
 513 0040 FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 514              	.LVL48:
 286:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 515              		.loc 1 286 0
 516 0044 5823     		movs	r3, #88
 517 0046 0022     		movs	r2, #0
 518 0048 8021     		movs	r1, #128
 519 004a D4F82002 		ldr	r0, [r4, #544]
 520 004e FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 521              	.LVL49:
 287:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);  
 522              		.loc 1 287 0
 523 0052 C023     		movs	r3, #192
 524 0054 0022     		movs	r2, #0
 525 0056 8121     		movs	r1, #129
 526 0058 D4F82002 		ldr	r0, [r4, #544]
 527 005c FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 528              	.LVL50:
 288:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 529              		.loc 1 288 0
 530 0060 4FF48873 		mov	r3, #272
 531 0064 0022     		movs	r2, #0
 532 0066 0121     		movs	r1, #1
 533 0068 D4F82002 		ldr	r0, [r4, #544]
 534 006c FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 535              	.LVL51:
 289:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);  
ARM GAS  /tmp/ccfbHqKe.s 			page 15


 536              		.loc 1 289 0
 537 0070 4FF48073 		mov	r3, #256
 538 0074 0022     		movs	r2, #0
 539 0076 8221     		movs	r1, #130
 540 0078 D4F82002 		ldr	r0, [r4, #544]
 541 007c FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 542              	.LVL52:
 290:Src/usbd_conf.c ****   return USBD_OK;
 291:Src/usbd_conf.c **** }
 543              		.loc 1 291 0
 544 0080 0020     		movs	r0, #0
 545 0082 10BD     		pop	{r4, pc}
 546              	.LVL53:
 547              	.L41:
 548              		.align	2
 549              	.L40:
 550 0084 00000000 		.word	hpcd_USB_FS
 551 0088 005C0040 		.word	1073765376
 552 008c 00000000 		.word	.LC0
 553              		.cfi_endproc
 554              	.LFE77:
 556              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 557              		.align	2
 558              		.global	USBD_LL_DeInit
 559              		.thumb
 560              		.thumb_func
 562              	USBD_LL_DeInit:
 563              	.LFB78:
 292:Src/usbd_conf.c **** 
 293:Src/usbd_conf.c **** /**
 294:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 295:Src/usbd_conf.c ****   * @param  pdev: Device handle
 296:Src/usbd_conf.c ****   * @retval USBD Status
 297:Src/usbd_conf.c ****   */
 298:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_DeInit (USBD_HandleTypeDef *pdev)
 299:Src/usbd_conf.c **** {
 564              		.loc 1 299 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              	.LVL54:
 569 0000 08B5     		push	{r3, lr}
 570              	.LCFI17:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 3, -8
 573              		.cfi_offset 14, -4
 574              	.LVL55:
 300:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 301:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 302:Src/usbd_conf.c ****  
 303:Src/usbd_conf.c ****   hal_status = HAL_PCD_DeInit(pdev->pData);
 575              		.loc 1 303 0
 576 0002 D0F82002 		ldr	r0, [r0, #544]
 577              	.LVL56:
 578 0006 FFF7FEFF 		bl	HAL_PCD_DeInit
 579              	.LVL57:
 304:Src/usbd_conf.c ****      
ARM GAS  /tmp/ccfbHqKe.s 			page 16


 305:Src/usbd_conf.c ****   switch (hal_status) {
 580              		.loc 1 305 0
 581 000a 10B1     		cbz	r0, .L44
 582 000c 0228     		cmp	r0, #2
 583 000e 02D0     		beq	.L45
 584 0010 03E0     		b	.L47
 585              	.L44:
 306:Src/usbd_conf.c ****     case HAL_OK :
 307:Src/usbd_conf.c ****       usb_status = USBD_OK;
 586              		.loc 1 307 0
 587 0012 0020     		movs	r0, #0
 588              	.LVL58:
 589 0014 08BD     		pop	{r3, pc}
 590              	.LVL59:
 591              	.L45:
 308:Src/usbd_conf.c ****     break;
 309:Src/usbd_conf.c ****     case HAL_ERROR :
 310:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 311:Src/usbd_conf.c ****     break;
 312:Src/usbd_conf.c ****     case HAL_BUSY :
 313:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 592              		.loc 1 313 0
 593 0016 0120     		movs	r0, #1
 594              	.LVL60:
 314:Src/usbd_conf.c ****     break;
 595              		.loc 1 314 0
 596 0018 08BD     		pop	{r3, pc}
 597              	.LVL61:
 598              	.L47:
 310:Src/usbd_conf.c ****     break;
 599              		.loc 1 310 0
 600 001a 0220     		movs	r0, #2
 601              	.LVL62:
 315:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 316:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 317:Src/usbd_conf.c ****     break;
 318:Src/usbd_conf.c ****     default :
 319:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 320:Src/usbd_conf.c ****     break;
 321:Src/usbd_conf.c ****   }
 322:Src/usbd_conf.c ****   return usb_status; 
 323:Src/usbd_conf.c **** }
 602              		.loc 1 323 0
 603 001c 08BD     		pop	{r3, pc}
 604              		.cfi_endproc
 605              	.LFE78:
 607 001e 00BF     		.section	.text.USBD_LL_Start,"ax",%progbits
 608              		.align	2
 609              		.global	USBD_LL_Start
 610              		.thumb
 611              		.thumb_func
 613              	USBD_LL_Start:
 614              	.LFB79:
 324:Src/usbd_conf.c **** 
 325:Src/usbd_conf.c **** /**
 326:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 327:Src/usbd_conf.c ****   * @param  pdev: Device handle
ARM GAS  /tmp/ccfbHqKe.s 			page 17


 328:Src/usbd_conf.c ****   * @retval USBD Status
 329:Src/usbd_conf.c ****   */
 330:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Start(USBD_HandleTypeDef *pdev)
 331:Src/usbd_conf.c **** {
 615              		.loc 1 331 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL63:
 620 0000 08B5     		push	{r3, lr}
 621              	.LCFI18:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 3, -8
 624              		.cfi_offset 14, -4
 625              	.LVL64:
 332:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 333:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 334:Src/usbd_conf.c ****  
 335:Src/usbd_conf.c ****   hal_status = HAL_PCD_Start(pdev->pData);
 626              		.loc 1 335 0
 627 0002 D0F82002 		ldr	r0, [r0, #544]
 628              	.LVL65:
 629 0006 FFF7FEFF 		bl	HAL_PCD_Start
 630              	.LVL66:
 336:Src/usbd_conf.c ****      
 337:Src/usbd_conf.c ****   switch (hal_status) {
 631              		.loc 1 337 0
 632 000a 10B1     		cbz	r0, .L51
 633 000c 0228     		cmp	r0, #2
 634 000e 02D0     		beq	.L52
 635 0010 03E0     		b	.L54
 636              	.L51:
 338:Src/usbd_conf.c ****     case HAL_OK :
 339:Src/usbd_conf.c ****       usb_status = USBD_OK;
 637              		.loc 1 339 0
 638 0012 0020     		movs	r0, #0
 639              	.LVL67:
 640 0014 08BD     		pop	{r3, pc}
 641              	.LVL68:
 642              	.L52:
 340:Src/usbd_conf.c ****     break;
 341:Src/usbd_conf.c ****     case HAL_ERROR :
 342:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 343:Src/usbd_conf.c ****     break;
 344:Src/usbd_conf.c ****     case HAL_BUSY :
 345:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 643              		.loc 1 345 0
 644 0016 0120     		movs	r0, #1
 645              	.LVL69:
 346:Src/usbd_conf.c ****     break;
 646              		.loc 1 346 0
 647 0018 08BD     		pop	{r3, pc}
 648              	.LVL70:
 649              	.L54:
 342:Src/usbd_conf.c ****     break;
 650              		.loc 1 342 0
 651 001a 0220     		movs	r0, #2
ARM GAS  /tmp/ccfbHqKe.s 			page 18


 652              	.LVL71:
 347:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 348:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 349:Src/usbd_conf.c ****     break;
 350:Src/usbd_conf.c ****     default :
 351:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 352:Src/usbd_conf.c ****     break;
 353:Src/usbd_conf.c ****   }
 354:Src/usbd_conf.c ****   return usb_status;  
 355:Src/usbd_conf.c **** }
 653              		.loc 1 355 0
 654 001c 08BD     		pop	{r3, pc}
 655              		.cfi_endproc
 656              	.LFE79:
 658 001e 00BF     		.section	.text.USBD_LL_Stop,"ax",%progbits
 659              		.align	2
 660              		.global	USBD_LL_Stop
 661              		.thumb
 662              		.thumb_func
 664              	USBD_LL_Stop:
 665              	.LFB80:
 356:Src/usbd_conf.c **** 
 357:Src/usbd_conf.c **** /**
 358:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 359:Src/usbd_conf.c ****   * @param  pdev: Device handle
 360:Src/usbd_conf.c ****   * @retval USBD Status
 361:Src/usbd_conf.c ****   */
 362:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Stop (USBD_HandleTypeDef *pdev)
 363:Src/usbd_conf.c **** {
 666              		.loc 1 363 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              	.LVL72:
 671 0000 08B5     		push	{r3, lr}
 672              	.LCFI19:
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 3, -8
 675              		.cfi_offset 14, -4
 676              	.LVL73:
 364:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 365:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 366:Src/usbd_conf.c ****  
 367:Src/usbd_conf.c ****   hal_status = HAL_PCD_Stop(pdev->pData);
 677              		.loc 1 367 0
 678 0002 D0F82002 		ldr	r0, [r0, #544]
 679              	.LVL74:
 680 0006 FFF7FEFF 		bl	HAL_PCD_Stop
 681              	.LVL75:
 368:Src/usbd_conf.c ****      
 369:Src/usbd_conf.c ****   switch (hal_status) {
 682              		.loc 1 369 0
 683 000a 10B1     		cbz	r0, .L58
 684 000c 0228     		cmp	r0, #2
 685 000e 02D0     		beq	.L59
 686 0010 03E0     		b	.L61
 687              	.L58:
ARM GAS  /tmp/ccfbHqKe.s 			page 19


 370:Src/usbd_conf.c ****     case HAL_OK :
 371:Src/usbd_conf.c ****       usb_status = USBD_OK;
 688              		.loc 1 371 0
 689 0012 0020     		movs	r0, #0
 690              	.LVL76:
 691 0014 08BD     		pop	{r3, pc}
 692              	.LVL77:
 693              	.L59:
 372:Src/usbd_conf.c ****     break;
 373:Src/usbd_conf.c ****     case HAL_ERROR :
 374:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 375:Src/usbd_conf.c ****     break;
 376:Src/usbd_conf.c ****     case HAL_BUSY :
 377:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 694              		.loc 1 377 0
 695 0016 0120     		movs	r0, #1
 696              	.LVL78:
 378:Src/usbd_conf.c ****     break;
 697              		.loc 1 378 0
 698 0018 08BD     		pop	{r3, pc}
 699              	.LVL79:
 700              	.L61:
 374:Src/usbd_conf.c ****     break;
 701              		.loc 1 374 0
 702 001a 0220     		movs	r0, #2
 703              	.LVL80:
 379:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 380:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 381:Src/usbd_conf.c ****     break;
 382:Src/usbd_conf.c ****     default :
 383:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 384:Src/usbd_conf.c ****     break;
 385:Src/usbd_conf.c ****   }
 386:Src/usbd_conf.c ****   return usb_status; 
 387:Src/usbd_conf.c **** }
 704              		.loc 1 387 0
 705 001c 08BD     		pop	{r3, pc}
 706              		.cfi_endproc
 707              	.LFE80:
 709 001e 00BF     		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 710              		.align	2
 711              		.global	USBD_LL_OpenEP
 712              		.thumb
 713              		.thumb_func
 715              	USBD_LL_OpenEP:
 716              	.LFB81:
 388:Src/usbd_conf.c **** 
 389:Src/usbd_conf.c **** /**
 390:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 391:Src/usbd_conf.c ****   * @param  pdev: Device handle
 392:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 393:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 394:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 395:Src/usbd_conf.c ****   * @retval USBD Status
 396:Src/usbd_conf.c ****   */
 397:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_OpenEP  (USBD_HandleTypeDef *pdev, 
 398:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
ARM GAS  /tmp/ccfbHqKe.s 			page 20


 399:Src/usbd_conf.c ****                                       uint8_t  ep_type,
 400:Src/usbd_conf.c ****                                       uint16_t ep_mps)
 401:Src/usbd_conf.c **** {
 717              		.loc 1 401 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              	.LVL81:
 722 0000 10B5     		push	{r4, lr}
 723              	.LCFI20:
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 4, -8
 726              		.cfi_offset 14, -4
 727 0002 1C46     		mov	r4, r3
 728              	.LVL82:
 402:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 403:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 404:Src/usbd_conf.c **** 
 405:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Open(pdev->pData, 
 729              		.loc 1 405 0
 730 0004 1346     		mov	r3, r2
 731              	.LVL83:
 732 0006 2246     		mov	r2, r4
 733              	.LVL84:
 734 0008 D0F82002 		ldr	r0, [r0, #544]
 735              	.LVL85:
 736 000c FFF7FEFF 		bl	HAL_PCD_EP_Open
 737              	.LVL86:
 406:Src/usbd_conf.c ****                                ep_addr, 
 407:Src/usbd_conf.c ****                                ep_mps, 
 408:Src/usbd_conf.c ****                                ep_type);
 409:Src/usbd_conf.c ****   
 410:Src/usbd_conf.c ****      
 411:Src/usbd_conf.c ****   switch (hal_status) {
 738              		.loc 1 411 0
 739 0010 10B1     		cbz	r0, .L65
 740 0012 0228     		cmp	r0, #2
 741 0014 02D0     		beq	.L66
 742 0016 03E0     		b	.L68
 743              	.L65:
 412:Src/usbd_conf.c ****     case HAL_OK :
 413:Src/usbd_conf.c ****       usb_status = USBD_OK;
 744              		.loc 1 413 0
 745 0018 0020     		movs	r0, #0
 746              	.LVL87:
 747 001a 10BD     		pop	{r4, pc}
 748              	.LVL88:
 749              	.L66:
 414:Src/usbd_conf.c ****     break;
 415:Src/usbd_conf.c ****     case HAL_ERROR :
 416:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 417:Src/usbd_conf.c ****     break;
 418:Src/usbd_conf.c ****     case HAL_BUSY :
 419:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 750              		.loc 1 419 0
 751 001c 0120     		movs	r0, #1
 752              	.LVL89:
ARM GAS  /tmp/ccfbHqKe.s 			page 21


 420:Src/usbd_conf.c ****     break;
 753              		.loc 1 420 0
 754 001e 10BD     		pop	{r4, pc}
 755              	.LVL90:
 756              	.L68:
 416:Src/usbd_conf.c ****     break;
 757              		.loc 1 416 0
 758 0020 0220     		movs	r0, #2
 759              	.LVL91:
 421:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 422:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 423:Src/usbd_conf.c ****     break;
 424:Src/usbd_conf.c ****     default :
 425:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 426:Src/usbd_conf.c ****     break;
 427:Src/usbd_conf.c ****   }
 428:Src/usbd_conf.c ****   return usb_status; 
 429:Src/usbd_conf.c **** }
 760              		.loc 1 429 0
 761 0022 10BD     		pop	{r4, pc}
 762              		.cfi_endproc
 763              	.LFE81:
 765              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 766              		.align	2
 767              		.global	USBD_LL_CloseEP
 768              		.thumb
 769              		.thumb_func
 771              	USBD_LL_CloseEP:
 772              	.LFB82:
 430:Src/usbd_conf.c **** 
 431:Src/usbd_conf.c **** /**
 432:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 433:Src/usbd_conf.c ****   * @param  pdev: Device handle
 434:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 435:Src/usbd_conf.c ****   * @retval USBD Status
 436:Src/usbd_conf.c ****   */
 437:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_CloseEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 438:Src/usbd_conf.c **** {
 773              		.loc 1 438 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL92:
 778 0000 08B5     		push	{r3, lr}
 779              	.LCFI21:
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
 783              	.LVL93:
 439:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 440:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 441:Src/usbd_conf.c ****   
 442:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 784              		.loc 1 442 0
 785 0002 D0F82002 		ldr	r0, [r0, #544]
 786              	.LVL94:
 787 0006 FFF7FEFF 		bl	HAL_PCD_EP_Close
ARM GAS  /tmp/ccfbHqKe.s 			page 22


 788              	.LVL95:
 443:Src/usbd_conf.c ****       
 444:Src/usbd_conf.c ****   switch (hal_status) {
 789              		.loc 1 444 0
 790 000a 10B1     		cbz	r0, .L72
 791 000c 0228     		cmp	r0, #2
 792 000e 02D0     		beq	.L73
 793 0010 03E0     		b	.L75
 794              	.L72:
 445:Src/usbd_conf.c ****     case HAL_OK :
 446:Src/usbd_conf.c ****       usb_status = USBD_OK;
 795              		.loc 1 446 0
 796 0012 0020     		movs	r0, #0
 797              	.LVL96:
 798 0014 08BD     		pop	{r3, pc}
 799              	.LVL97:
 800              	.L73:
 447:Src/usbd_conf.c ****     break;
 448:Src/usbd_conf.c ****     case HAL_ERROR :
 449:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 450:Src/usbd_conf.c ****     break;
 451:Src/usbd_conf.c ****     case HAL_BUSY :
 452:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 801              		.loc 1 452 0
 802 0016 0120     		movs	r0, #1
 803              	.LVL98:
 453:Src/usbd_conf.c ****     break;
 804              		.loc 1 453 0
 805 0018 08BD     		pop	{r3, pc}
 806              	.LVL99:
 807              	.L75:
 449:Src/usbd_conf.c ****     break;
 808              		.loc 1 449 0
 809 001a 0220     		movs	r0, #2
 810              	.LVL100:
 454:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 455:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 456:Src/usbd_conf.c ****     break;
 457:Src/usbd_conf.c ****     default :
 458:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 459:Src/usbd_conf.c ****     break;
 460:Src/usbd_conf.c ****   }
 461:Src/usbd_conf.c ****   return usb_status;  
 462:Src/usbd_conf.c **** }
 811              		.loc 1 462 0
 812 001c 08BD     		pop	{r3, pc}
 813              		.cfi_endproc
 814              	.LFE82:
 816 001e 00BF     		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 817              		.align	2
 818              		.global	USBD_LL_FlushEP
 819              		.thumb
 820              		.thumb_func
 822              	USBD_LL_FlushEP:
 823              	.LFB83:
 463:Src/usbd_conf.c **** 
 464:Src/usbd_conf.c **** /**
ARM GAS  /tmp/ccfbHqKe.s 			page 23


 465:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 466:Src/usbd_conf.c ****   * @param  pdev: Device handle
 467:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 468:Src/usbd_conf.c ****   * @retval USBD Status
 469:Src/usbd_conf.c ****   */
 470:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_FlushEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 471:Src/usbd_conf.c **** {
 824              		.loc 1 471 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL101:
 829 0000 08B5     		push	{r3, lr}
 830              	.LCFI22:
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 3, -8
 833              		.cfi_offset 14, -4
 834              	.LVL102:
 472:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 473:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 474:Src/usbd_conf.c ****   
 475:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 835              		.loc 1 475 0
 836 0002 D0F82002 		ldr	r0, [r0, #544]
 837              	.LVL103:
 838 0006 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 839              	.LVL104:
 476:Src/usbd_conf.c ****       
 477:Src/usbd_conf.c ****   switch (hal_status) {
 840              		.loc 1 477 0
 841 000a 10B1     		cbz	r0, .L79
 842 000c 0228     		cmp	r0, #2
 843 000e 02D0     		beq	.L80
 844 0010 03E0     		b	.L82
 845              	.L79:
 478:Src/usbd_conf.c ****     case HAL_OK :
 479:Src/usbd_conf.c ****       usb_status = USBD_OK;
 846              		.loc 1 479 0
 847 0012 0020     		movs	r0, #0
 848              	.LVL105:
 849 0014 08BD     		pop	{r3, pc}
 850              	.LVL106:
 851              	.L80:
 480:Src/usbd_conf.c ****     break;
 481:Src/usbd_conf.c ****     case HAL_ERROR :
 482:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 483:Src/usbd_conf.c ****     break;
 484:Src/usbd_conf.c ****     case HAL_BUSY :
 485:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 852              		.loc 1 485 0
 853 0016 0120     		movs	r0, #1
 854              	.LVL107:
 486:Src/usbd_conf.c ****     break;
 855              		.loc 1 486 0
 856 0018 08BD     		pop	{r3, pc}
 857              	.LVL108:
 858              	.L82:
ARM GAS  /tmp/ccfbHqKe.s 			page 24


 482:Src/usbd_conf.c ****     break;
 859              		.loc 1 482 0
 860 001a 0220     		movs	r0, #2
 861              	.LVL109:
 487:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 488:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 489:Src/usbd_conf.c ****     break;
 490:Src/usbd_conf.c ****     default :
 491:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 492:Src/usbd_conf.c ****     break;
 493:Src/usbd_conf.c ****   }
 494:Src/usbd_conf.c ****   return usb_status;  
 495:Src/usbd_conf.c **** }
 862              		.loc 1 495 0
 863 001c 08BD     		pop	{r3, pc}
 864              		.cfi_endproc
 865              	.LFE83:
 867 001e 00BF     		.section	.text.USBD_LL_StallEP,"ax",%progbits
 868              		.align	2
 869              		.global	USBD_LL_StallEP
 870              		.thumb
 871              		.thumb_func
 873              	USBD_LL_StallEP:
 874              	.LFB84:
 496:Src/usbd_conf.c **** 
 497:Src/usbd_conf.c **** /**
 498:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 499:Src/usbd_conf.c ****   * @param  pdev: Device handle
 500:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 501:Src/usbd_conf.c ****   * @retval USBD Status
 502:Src/usbd_conf.c ****   */
 503:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_StallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 504:Src/usbd_conf.c **** {
 875              		.loc 1 504 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              	.LVL110:
 880 0000 08B5     		push	{r3, lr}
 881              	.LCFI23:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 3, -8
 884              		.cfi_offset 14, -4
 885              	.LVL111:
 505:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 506:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 507:Src/usbd_conf.c ****   
 508:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 886              		.loc 1 508 0
 887 0002 D0F82002 		ldr	r0, [r0, #544]
 888              	.LVL112:
 889 0006 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 890              	.LVL113:
 509:Src/usbd_conf.c ****       
 510:Src/usbd_conf.c ****   switch (hal_status) {
 891              		.loc 1 510 0
 892 000a 10B1     		cbz	r0, .L86
ARM GAS  /tmp/ccfbHqKe.s 			page 25


 893 000c 0228     		cmp	r0, #2
 894 000e 02D0     		beq	.L87
 895 0010 03E0     		b	.L89
 896              	.L86:
 511:Src/usbd_conf.c ****     case HAL_OK :
 512:Src/usbd_conf.c ****       usb_status = USBD_OK;
 897              		.loc 1 512 0
 898 0012 0020     		movs	r0, #0
 899              	.LVL114:
 900 0014 08BD     		pop	{r3, pc}
 901              	.LVL115:
 902              	.L87:
 513:Src/usbd_conf.c ****     break;
 514:Src/usbd_conf.c ****     case HAL_ERROR :
 515:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 516:Src/usbd_conf.c ****     break;
 517:Src/usbd_conf.c ****     case HAL_BUSY :
 518:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 903              		.loc 1 518 0
 904 0016 0120     		movs	r0, #1
 905              	.LVL116:
 519:Src/usbd_conf.c ****     break;
 906              		.loc 1 519 0
 907 0018 08BD     		pop	{r3, pc}
 908              	.LVL117:
 909              	.L89:
 515:Src/usbd_conf.c ****     break;
 910              		.loc 1 515 0
 911 001a 0220     		movs	r0, #2
 912              	.LVL118:
 520:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 521:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 522:Src/usbd_conf.c ****     break;
 523:Src/usbd_conf.c ****     default :
 524:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 525:Src/usbd_conf.c ****     break;
 526:Src/usbd_conf.c ****   }
 527:Src/usbd_conf.c ****   return usb_status;  
 528:Src/usbd_conf.c **** }
 913              		.loc 1 528 0
 914 001c 08BD     		pop	{r3, pc}
 915              		.cfi_endproc
 916              	.LFE84:
 918 001e 00BF     		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 919              		.align	2
 920              		.global	USBD_LL_ClearStallEP
 921              		.thumb
 922              		.thumb_func
 924              	USBD_LL_ClearStallEP:
 925              	.LFB85:
 529:Src/usbd_conf.c **** 
 530:Src/usbd_conf.c **** /**
 531:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 532:Src/usbd_conf.c ****   * @param  pdev: Device handle
 533:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 534:Src/usbd_conf.c ****   * @retval USBD Status
 535:Src/usbd_conf.c ****   */
ARM GAS  /tmp/ccfbHqKe.s 			page 26


 536:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_ClearStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 537:Src/usbd_conf.c **** {
 926              		.loc 1 537 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              	.LVL119:
 931 0000 08B5     		push	{r3, lr}
 932              	.LCFI24:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LVL120:
 538:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 539:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 540:Src/usbd_conf.c ****   
 541:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);  
 937              		.loc 1 541 0
 938 0002 D0F82002 		ldr	r0, [r0, #544]
 939              	.LVL121:
 940 0006 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 941              	.LVL122:
 542:Src/usbd_conf.c ****      
 543:Src/usbd_conf.c ****   switch (hal_status) {
 942              		.loc 1 543 0
 943 000a 10B1     		cbz	r0, .L93
 944 000c 0228     		cmp	r0, #2
 945 000e 02D0     		beq	.L94
 946 0010 03E0     		b	.L96
 947              	.L93:
 544:Src/usbd_conf.c ****     case HAL_OK :
 545:Src/usbd_conf.c ****       usb_status = USBD_OK;
 948              		.loc 1 545 0
 949 0012 0020     		movs	r0, #0
 950              	.LVL123:
 951 0014 08BD     		pop	{r3, pc}
 952              	.LVL124:
 953              	.L94:
 546:Src/usbd_conf.c ****     break;
 547:Src/usbd_conf.c ****     case HAL_ERROR :
 548:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 549:Src/usbd_conf.c ****     break;
 550:Src/usbd_conf.c ****     case HAL_BUSY :
 551:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 954              		.loc 1 551 0
 955 0016 0120     		movs	r0, #1
 956              	.LVL125:
 552:Src/usbd_conf.c ****     break;
 957              		.loc 1 552 0
 958 0018 08BD     		pop	{r3, pc}
 959              	.LVL126:
 960              	.L96:
 548:Src/usbd_conf.c ****     break;
 961              		.loc 1 548 0
 962 001a 0220     		movs	r0, #2
 963              	.LVL127:
 553:Src/usbd_conf.c ****     case HAL_TIMEOUT :
ARM GAS  /tmp/ccfbHqKe.s 			page 27


 554:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 555:Src/usbd_conf.c ****     break;
 556:Src/usbd_conf.c ****     default :
 557:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 558:Src/usbd_conf.c ****     break;
 559:Src/usbd_conf.c ****   }
 560:Src/usbd_conf.c ****   return usb_status; 
 561:Src/usbd_conf.c **** }
 964              		.loc 1 561 0
 965 001c 08BD     		pop	{r3, pc}
 966              		.cfi_endproc
 967              	.LFE85:
 969 001e 00BF     		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 970              		.align	2
 971              		.global	USBD_LL_IsStallEP
 972              		.thumb
 973              		.thumb_func
 975              	USBD_LL_IsStallEP:
 976              	.LFB86:
 562:Src/usbd_conf.c **** 
 563:Src/usbd_conf.c **** /**
 564:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 565:Src/usbd_conf.c ****   * @param  pdev: Device handle
 566:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 567:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 568:Src/usbd_conf.c ****   */
 569:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 570:Src/usbd_conf.c **** {
 977              		.loc 1 570 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL128:
 571:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 983              		.loc 1 571 0
 984 0000 D0F82022 		ldr	r2, [r0, #544]
 985              	.LVL129:
 572:Src/usbd_conf.c ****   
 573:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 986              		.loc 1 573 0
 987 0004 11F0800F 		tst	r1, #128
 988 0008 06D0     		beq	.L99
 574:Src/usbd_conf.c ****   {
 575:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 989              		.loc 1 575 0
 990 000a 01F07F03 		and	r3, r1, #127
 991 000e 02EB4311 		add	r1, r2, r3, lsl #5
 992              	.LVL130:
 993 0012 91F82A00 		ldrb	r0, [r1, #42]	@ zero_extendqisi2
 994              	.LVL131:
 995 0016 7047     		bx	lr
 996              	.LVL132:
 997              	.L99:
 576:Src/usbd_conf.c ****   }
 577:Src/usbd_conf.c ****   else
 578:Src/usbd_conf.c ****   {
ARM GAS  /tmp/ccfbHqKe.s 			page 28


 579:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 998              		.loc 1 579 0
 999 0018 01F07F01 		and	r1, r1, #127
 1000              	.LVL133:
 1001 001c 02EB4111 		add	r1, r2, r1, lsl #5
 1002 0020 91F82A02 		ldrb	r0, [r1, #554]	@ zero_extendqisi2
 1003              	.LVL134:
 580:Src/usbd_conf.c ****   }
 581:Src/usbd_conf.c **** }
 1004              		.loc 1 581 0
 1005 0024 7047     		bx	lr
 1006              		.cfi_endproc
 1007              	.LFE86:
 1009 0026 00BF     		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 1010              		.align	2
 1011              		.global	USBD_LL_SetUSBAddress
 1012              		.thumb
 1013              		.thumb_func
 1015              	USBD_LL_SetUSBAddress:
 1016              	.LFB87:
 582:Src/usbd_conf.c **** /**
 583:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 584:Src/usbd_conf.c ****   * @param  pdev: Device handle
 585:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 586:Src/usbd_conf.c ****   * @retval USBD Status
 587:Src/usbd_conf.c ****   */
 588:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_SetUSBAddress (USBD_HandleTypeDef *pdev, uint8_t dev_addr)   
 589:Src/usbd_conf.c **** {
 1017              		.loc 1 589 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              	.LVL135:
 1022 0000 08B5     		push	{r3, lr}
 1023              	.LCFI25:
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 3, -8
 1026              		.cfi_offset 14, -4
 1027              	.LVL136:
 590:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 591:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 592:Src/usbd_conf.c ****   
 593:Src/usbd_conf.c ****   hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 1028              		.loc 1 593 0
 1029 0002 D0F82002 		ldr	r0, [r0, #544]
 1030              	.LVL137:
 1031 0006 FFF7FEFF 		bl	HAL_PCD_SetAddress
 1032              	.LVL138:
 594:Src/usbd_conf.c ****      
 595:Src/usbd_conf.c ****   switch (hal_status) {
 1033              		.loc 1 595 0
 1034 000a 10B1     		cbz	r0, .L103
 1035 000c 0228     		cmp	r0, #2
 1036 000e 02D0     		beq	.L104
 1037 0010 03E0     		b	.L106
 1038              	.L103:
 596:Src/usbd_conf.c ****     case HAL_OK :
ARM GAS  /tmp/ccfbHqKe.s 			page 29


 597:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1039              		.loc 1 597 0
 1040 0012 0020     		movs	r0, #0
 1041              	.LVL139:
 1042 0014 08BD     		pop	{r3, pc}
 1043              	.LVL140:
 1044              	.L104:
 598:Src/usbd_conf.c ****     break;
 599:Src/usbd_conf.c ****     case HAL_ERROR :
 600:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 601:Src/usbd_conf.c ****     break;
 602:Src/usbd_conf.c ****     case HAL_BUSY :
 603:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1045              		.loc 1 603 0
 1046 0016 0120     		movs	r0, #1
 1047              	.LVL141:
 604:Src/usbd_conf.c ****     break;
 1048              		.loc 1 604 0
 1049 0018 08BD     		pop	{r3, pc}
 1050              	.LVL142:
 1051              	.L106:
 600:Src/usbd_conf.c ****     break;
 1052              		.loc 1 600 0
 1053 001a 0220     		movs	r0, #2
 1054              	.LVL143:
 605:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 606:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 607:Src/usbd_conf.c ****     break;
 608:Src/usbd_conf.c ****     default :
 609:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 610:Src/usbd_conf.c ****     break;
 611:Src/usbd_conf.c ****   }
 612:Src/usbd_conf.c ****   return usb_status;  
 613:Src/usbd_conf.c **** }
 1055              		.loc 1 613 0
 1056 001c 08BD     		pop	{r3, pc}
 1057              		.cfi_endproc
 1058              	.LFE87:
 1060 001e 00BF     		.section	.text.USBD_LL_Transmit,"ax",%progbits
 1061              		.align	2
 1062              		.global	USBD_LL_Transmit
 1063              		.thumb
 1064              		.thumb_func
 1066              	USBD_LL_Transmit:
 1067              	.LFB88:
 614:Src/usbd_conf.c **** 
 615:Src/usbd_conf.c **** /**
 616:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 617:Src/usbd_conf.c ****   * @param  pdev: Device handle
 618:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 619:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 620:Src/usbd_conf.c ****   * @param  size: Data size    
 621:Src/usbd_conf.c ****   * @retval USBD Status
 622:Src/usbd_conf.c ****   */
 623:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Transmit (USBD_HandleTypeDef *pdev, 
 624:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 625:Src/usbd_conf.c ****                                       uint8_t  *pbuf,
ARM GAS  /tmp/ccfbHqKe.s 			page 30


 626:Src/usbd_conf.c ****                                       uint16_t  size)
 627:Src/usbd_conf.c **** {
 1068              		.loc 1 627 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              	.LVL144:
 1073 0000 08B5     		push	{r3, lr}
 1074              	.LCFI26:
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 3, -8
 1077              		.cfi_offset 14, -4
 1078              	.LVL145:
 628:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 629:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 630:Src/usbd_conf.c **** 
 631:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 1079              		.loc 1 631 0
 1080 0002 D0F82002 		ldr	r0, [r0, #544]
 1081              	.LVL146:
 1082 0006 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 1083              	.LVL147:
 632:Src/usbd_conf.c ****      
 633:Src/usbd_conf.c ****   switch (hal_status) {
 1084              		.loc 1 633 0
 1085 000a 10B1     		cbz	r0, .L110
 1086 000c 0228     		cmp	r0, #2
 1087 000e 02D0     		beq	.L111
 1088 0010 03E0     		b	.L113
 1089              	.L110:
 634:Src/usbd_conf.c ****     case HAL_OK :
 635:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1090              		.loc 1 635 0
 1091 0012 0020     		movs	r0, #0
 1092              	.LVL148:
 1093 0014 08BD     		pop	{r3, pc}
 1094              	.LVL149:
 1095              	.L111:
 636:Src/usbd_conf.c ****     break;
 637:Src/usbd_conf.c ****     case HAL_ERROR :
 638:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 639:Src/usbd_conf.c ****     break;
 640:Src/usbd_conf.c ****     case HAL_BUSY :
 641:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1096              		.loc 1 641 0
 1097 0016 0120     		movs	r0, #1
 1098              	.LVL150:
 642:Src/usbd_conf.c ****     break;
 1099              		.loc 1 642 0
 1100 0018 08BD     		pop	{r3, pc}
 1101              	.LVL151:
 1102              	.L113:
 638:Src/usbd_conf.c ****     break;
 1103              		.loc 1 638 0
 1104 001a 0220     		movs	r0, #2
 1105              	.LVL152:
 643:Src/usbd_conf.c ****     case HAL_TIMEOUT :
ARM GAS  /tmp/ccfbHqKe.s 			page 31


 644:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 645:Src/usbd_conf.c ****     break;
 646:Src/usbd_conf.c ****     default :
 647:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 648:Src/usbd_conf.c ****     break;
 649:Src/usbd_conf.c ****   }
 650:Src/usbd_conf.c ****   return usb_status;    
 651:Src/usbd_conf.c **** }
 1106              		.loc 1 651 0
 1107 001c 08BD     		pop	{r3, pc}
 1108              		.cfi_endproc
 1109              	.LFE88:
 1111 001e 00BF     		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1112              		.align	2
 1113              		.global	USBD_LL_PrepareReceive
 1114              		.thumb
 1115              		.thumb_func
 1117              	USBD_LL_PrepareReceive:
 1118              	.LFB89:
 652:Src/usbd_conf.c **** 
 653:Src/usbd_conf.c **** /**
 654:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 655:Src/usbd_conf.c ****   * @param  pdev: Device handle
 656:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 657:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 658:Src/usbd_conf.c ****   * @param  size: Data size
 659:Src/usbd_conf.c ****   * @retval USBD Status
 660:Src/usbd_conf.c ****   */
 661:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 662:Src/usbd_conf.c ****                                            uint8_t  ep_addr,                                      
 663:Src/usbd_conf.c ****                                            uint8_t  *pbuf,
 664:Src/usbd_conf.c ****                                            uint16_t  size)
 665:Src/usbd_conf.c **** {
 1119              		.loc 1 665 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123              	.LVL153:
 1124 0000 08B5     		push	{r3, lr}
 1125              	.LCFI27:
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 3, -8
 1128              		.cfi_offset 14, -4
 1129              	.LVL154:
 666:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 667:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 668:Src/usbd_conf.c **** 
 669:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 1130              		.loc 1 669 0
 1131 0002 D0F82002 		ldr	r0, [r0, #544]
 1132              	.LVL155:
 1133 0006 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 1134              	.LVL156:
 670:Src/usbd_conf.c ****      
 671:Src/usbd_conf.c ****   switch (hal_status) {
 1135              		.loc 1 671 0
 1136 000a 10B1     		cbz	r0, .L117
ARM GAS  /tmp/ccfbHqKe.s 			page 32


 1137 000c 0228     		cmp	r0, #2
 1138 000e 02D0     		beq	.L118
 1139 0010 03E0     		b	.L120
 1140              	.L117:
 672:Src/usbd_conf.c ****     case HAL_OK :
 673:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1141              		.loc 1 673 0
 1142 0012 0020     		movs	r0, #0
 1143              	.LVL157:
 1144 0014 08BD     		pop	{r3, pc}
 1145              	.LVL158:
 1146              	.L118:
 674:Src/usbd_conf.c ****     break;
 675:Src/usbd_conf.c ****     case HAL_ERROR :
 676:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 677:Src/usbd_conf.c ****     break;
 678:Src/usbd_conf.c ****     case HAL_BUSY :
 679:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1147              		.loc 1 679 0
 1148 0016 0120     		movs	r0, #1
 1149              	.LVL159:
 680:Src/usbd_conf.c ****     break;
 1150              		.loc 1 680 0
 1151 0018 08BD     		pop	{r3, pc}
 1152              	.LVL160:
 1153              	.L120:
 676:Src/usbd_conf.c ****     break;
 1154              		.loc 1 676 0
 1155 001a 0220     		movs	r0, #2
 1156              	.LVL161:
 681:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 682:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 683:Src/usbd_conf.c ****     break;
 684:Src/usbd_conf.c ****     default :
 685:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 686:Src/usbd_conf.c ****     break;
 687:Src/usbd_conf.c ****   }
 688:Src/usbd_conf.c ****   return usb_status; 
 689:Src/usbd_conf.c **** }
 1157              		.loc 1 689 0
 1158 001c 08BD     		pop	{r3, pc}
 1159              		.cfi_endproc
 1160              	.LFE89:
 1162 001e 00BF     		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1163              		.align	2
 1164              		.global	USBD_LL_GetRxDataSize
 1165              		.thumb
 1166              		.thumb_func
 1168              	USBD_LL_GetRxDataSize:
 1169              	.LFB90:
 690:Src/usbd_conf.c **** 
 691:Src/usbd_conf.c **** /**
 692:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 693:Src/usbd_conf.c ****   * @param  pdev: Device handle
 694:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 695:Src/usbd_conf.c ****   * @retval Recived Data Size
 696:Src/usbd_conf.c ****   */
ARM GAS  /tmp/ccfbHqKe.s 			page 33


 697:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize  (USBD_HandleTypeDef *pdev, uint8_t  ep_addr)  
 698:Src/usbd_conf.c **** {
 1170              		.loc 1 698 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              	.LVL162:
 1175 0000 08B5     		push	{r3, lr}
 1176              	.LCFI28:
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 3, -8
 1179              		.cfi_offset 14, -4
 699:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1180              		.loc 1 699 0
 1181 0002 D0F82002 		ldr	r0, [r0, #544]
 1182              	.LVL163:
 1183 0006 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1184              	.LVL164:
 700:Src/usbd_conf.c **** }
 1185              		.loc 1 700 0
 1186 000a 08BD     		pop	{r3, pc}
 1187              		.cfi_endproc
 1188              	.LFE90:
 1190              		.section	.text.USBD_LL_Delay,"ax",%progbits
 1191              		.align	2
 1192              		.global	USBD_LL_Delay
 1193              		.thumb
 1194              		.thumb_func
 1196              	USBD_LL_Delay:
 1197              	.LFB91:
 701:Src/usbd_conf.c **** 
 702:Src/usbd_conf.c **** /**
 703:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 704:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 705:Src/usbd_conf.c ****   * @retval None
 706:Src/usbd_conf.c ****   */
 707:Src/usbd_conf.c **** void  USBD_LL_Delay (uint32_t Delay)
 708:Src/usbd_conf.c **** {
 1198              		.loc 1 708 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              	.LVL165:
 1203 0000 08B5     		push	{r3, lr}
 1204              	.LCFI29:
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 3, -8
 1207              		.cfi_offset 14, -4
 709:Src/usbd_conf.c ****   HAL_Delay(Delay);  
 1208              		.loc 1 709 0
 1209 0002 FFF7FEFF 		bl	HAL_Delay
 1210              	.LVL166:
 1211 0006 08BD     		pop	{r3, pc}
 1212              		.cfi_endproc
 1213              	.LFE91:
 1215              		.section	.text.USBD_static_malloc,"ax",%progbits
 1216              		.align	2
ARM GAS  /tmp/ccfbHqKe.s 			page 34


 1217              		.global	USBD_static_malloc
 1218              		.thumb
 1219              		.thumb_func
 1221              	USBD_static_malloc:
 1222              	.LFB92:
 710:Src/usbd_conf.c **** }
 711:Src/usbd_conf.c **** 
 712:Src/usbd_conf.c **** /**
 713:Src/usbd_conf.c ****   * @brief  static single allocation.
 714:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 715:Src/usbd_conf.c ****   * @retval None
 716:Src/usbd_conf.c ****   */
 717:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 718:Src/usbd_conf.c **** {
 1223              		.loc 1 718 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		@ link register save eliminated.
 1228              	.LVL167:
 719:Src/usbd_conf.c ****   static uint32_t mem[(sizeof(USBD_CDC_HandleTypeDef)/4)+1];/* On 32-bit boundary */
 720:Src/usbd_conf.c ****   return mem;
 721:Src/usbd_conf.c **** }
 1229              		.loc 1 721 0
 1230 0000 0048     		ldr	r0, .L127
 1231              	.LVL168:
 1232 0002 7047     		bx	lr
 1233              	.L128:
 1234              		.align	2
 1235              	.L127:
 1236 0004 00000000 		.word	.LANCHOR0
 1237              		.cfi_endproc
 1238              	.LFE92:
 1240              		.section	.text.USBD_static_free,"ax",%progbits
 1241              		.align	2
 1242              		.global	USBD_static_free
 1243              		.thumb
 1244              		.thumb_func
 1246              	USBD_static_free:
 1247              	.LFB93:
 722:Src/usbd_conf.c **** 
 723:Src/usbd_conf.c **** /**
 724:Src/usbd_conf.c ****   * @brief  Dummy memory free
 725:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 726:Src/usbd_conf.c ****   * @retval None
 727:Src/usbd_conf.c ****   */
 728:Src/usbd_conf.c **** void USBD_static_free(void *p)
 729:Src/usbd_conf.c **** {
 1248              		.loc 1 729 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 1253              	.LVL169:
 1254 0000 7047     		bx	lr
 1255              		.cfi_endproc
 1256              	.LFE93:
ARM GAS  /tmp/ccfbHqKe.s 			page 35


 1258 0002 00BF     		.section	.text.HAL_PCDEx_SetConnectionState,"ax",%progbits
 1259              		.align	2
 1260              		.global	HAL_PCDEx_SetConnectionState
 1261              		.thumb
 1262              		.thumb_func
 1264              	HAL_PCDEx_SetConnectionState:
 1265              	.LFB94:
 730:Src/usbd_conf.c **** 
 731:Src/usbd_conf.c **** }
 732:Src/usbd_conf.c **** 
 733:Src/usbd_conf.c **** /**
 734:Src/usbd_conf.c **** * @brief Software Device Connection
 735:Src/usbd_conf.c **** * @param hpcd: PCD handle
 736:Src/usbd_conf.c **** * @param state: connection state (0 : disconnected / 1: connected) 
 737:Src/usbd_conf.c **** * @retval None
 738:Src/usbd_conf.c **** */
 739:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
 740:Src/usbd_conf.c **** {
 1266              		.loc 1 740 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 0, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
 1271              	.LVL170:
 1272 0000 7047     		bx	lr
 1273              		.cfi_endproc
 1274              	.LFE94:
 1276              		.comm	hpcd_USB_FS,1120,4
 1277 0002 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 1278              		.align	2
 1279              	.LC0:
 1280 0000 5372632F 		.ascii	"Src/usbd_conf.c\000"
 1280      75736264 
 1280      5F636F6E 
 1280      662E6300 
 1281              		.section	.bss.mem.7680,"aw",%nobits
 1282              		.align	2
 1283              		.set	.LANCHOR0,. + 0
 1286              	mem.7680:
 1287 0000 00000000 		.space	544
 1287      00000000 
 1287      00000000 
 1287      00000000 
 1287      00000000 
 1288              		.text
 1289              	.Letext0:
 1290              		.file 2 "/opt/toolchain/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.
 1291              		.file 3 "/opt/toolchain/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1292              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1293              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1294              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1295              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1296              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 1297              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 1298              		.file 10 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1299              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1300              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
ARM GAS  /tmp/ccfbHqKe.s 			page 36


 1301              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd_ex.h"
 1302              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccfbHqKe.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_conf.c
     /tmp/ccfbHqKe.s:20     .text.HAL_PCD_MspInit:00000000 $t
     /tmp/ccfbHqKe.s:25     .text.HAL_PCD_MspInit:00000000 HAL_PCD_MspInit
     /tmp/ccfbHqKe.s:83     .text.HAL_PCD_MspInit:0000003c $d
     /tmp/ccfbHqKe.s:88     .text.HAL_PCD_MspDeInit:00000000 $t
     /tmp/ccfbHqKe.s:93     .text.HAL_PCD_MspDeInit:00000000 HAL_PCD_MspDeInit
     /tmp/ccfbHqKe.s:125    .text.HAL_PCD_MspDeInit:0000001c $d
     /tmp/ccfbHqKe.s:131    .text.HAL_PCD_SetupStageCallback:00000000 $t
     /tmp/ccfbHqKe.s:136    .text.HAL_PCD_SetupStageCallback:00000000 HAL_PCD_SetupStageCallback
     /tmp/ccfbHqKe.s:159    .text.HAL_PCD_DataOutStageCallback:00000000 $t
     /tmp/ccfbHqKe.s:164    .text.HAL_PCD_DataOutStageCallback:00000000 HAL_PCD_DataOutStageCallback
     /tmp/ccfbHqKe.s:188    .text.HAL_PCD_DataInStageCallback:00000000 $t
     /tmp/ccfbHqKe.s:193    .text.HAL_PCD_DataInStageCallback:00000000 HAL_PCD_DataInStageCallback
     /tmp/ccfbHqKe.s:217    .text.HAL_PCD_SOFCallback:00000000 $t
     /tmp/ccfbHqKe.s:222    .text.HAL_PCD_SOFCallback:00000000 HAL_PCD_SOFCallback
     /tmp/ccfbHqKe.s:244    .text.HAL_PCD_ResetCallback:00000000 $t
     /tmp/ccfbHqKe.s:249    .text.HAL_PCD_ResetCallback:00000000 HAL_PCD_ResetCallback
     /tmp/ccfbHqKe.s:278    .text.HAL_PCD_SuspendCallback:00000000 $t
     /tmp/ccfbHqKe.s:283    .text.HAL_PCD_SuspendCallback:00000000 HAL_PCD_SuspendCallback
     /tmp/ccfbHqKe.s:315    .text.HAL_PCD_SuspendCallback:0000001c $d
     /tmp/ccfbHqKe.s:320    .text.HAL_PCD_ResumeCallback:00000000 $t
     /tmp/ccfbHqKe.s:325    .text.HAL_PCD_ResumeCallback:00000000 HAL_PCD_ResumeCallback
     /tmp/ccfbHqKe.s:347    .text.HAL_PCD_ISOOUTIncompleteCallback:00000000 $t
     /tmp/ccfbHqKe.s:352    .text.HAL_PCD_ISOOUTIncompleteCallback:00000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/ccfbHqKe.s:374    .text.HAL_PCD_ISOINIncompleteCallback:00000000 $t
     /tmp/ccfbHqKe.s:379    .text.HAL_PCD_ISOINIncompleteCallback:00000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/ccfbHqKe.s:401    .text.HAL_PCD_ConnectCallback:00000000 $t
     /tmp/ccfbHqKe.s:406    .text.HAL_PCD_ConnectCallback:00000000 HAL_PCD_ConnectCallback
     /tmp/ccfbHqKe.s:428    .text.HAL_PCD_DisconnectCallback:00000000 $t
     /tmp/ccfbHqKe.s:433    .text.HAL_PCD_DisconnectCallback:00000000 HAL_PCD_DisconnectCallback
     /tmp/ccfbHqKe.s:455    .text.USBD_LL_Init:00000000 $t
     /tmp/ccfbHqKe.s:460    .text.USBD_LL_Init:00000000 USBD_LL_Init
     /tmp/ccfbHqKe.s:550    .text.USBD_LL_Init:00000084 $d
                            *COM*:00000460 hpcd_USB_FS
     /tmp/ccfbHqKe.s:557    .text.USBD_LL_DeInit:00000000 $t
     /tmp/ccfbHqKe.s:562    .text.USBD_LL_DeInit:00000000 USBD_LL_DeInit
     /tmp/ccfbHqKe.s:608    .text.USBD_LL_Start:00000000 $t
     /tmp/ccfbHqKe.s:613    .text.USBD_LL_Start:00000000 USBD_LL_Start
     /tmp/ccfbHqKe.s:659    .text.USBD_LL_Stop:00000000 $t
     /tmp/ccfbHqKe.s:664    .text.USBD_LL_Stop:00000000 USBD_LL_Stop
     /tmp/ccfbHqKe.s:710    .text.USBD_LL_OpenEP:00000000 $t
     /tmp/ccfbHqKe.s:715    .text.USBD_LL_OpenEP:00000000 USBD_LL_OpenEP
     /tmp/ccfbHqKe.s:766    .text.USBD_LL_CloseEP:00000000 $t
     /tmp/ccfbHqKe.s:771    .text.USBD_LL_CloseEP:00000000 USBD_LL_CloseEP
     /tmp/ccfbHqKe.s:817    .text.USBD_LL_FlushEP:00000000 $t
     /tmp/ccfbHqKe.s:822    .text.USBD_LL_FlushEP:00000000 USBD_LL_FlushEP
     /tmp/ccfbHqKe.s:868    .text.USBD_LL_StallEP:00000000 $t
     /tmp/ccfbHqKe.s:873    .text.USBD_LL_StallEP:00000000 USBD_LL_StallEP
     /tmp/ccfbHqKe.s:919    .text.USBD_LL_ClearStallEP:00000000 $t
     /tmp/ccfbHqKe.s:924    .text.USBD_LL_ClearStallEP:00000000 USBD_LL_ClearStallEP
     /tmp/ccfbHqKe.s:970    .text.USBD_LL_IsStallEP:00000000 $t
     /tmp/ccfbHqKe.s:975    .text.USBD_LL_IsStallEP:00000000 USBD_LL_IsStallEP
     /tmp/ccfbHqKe.s:1010   .text.USBD_LL_SetUSBAddress:00000000 $t
     /tmp/ccfbHqKe.s:1015   .text.USBD_LL_SetUSBAddress:00000000 USBD_LL_SetUSBAddress
     /tmp/ccfbHqKe.s:1061   .text.USBD_LL_Transmit:00000000 $t
     /tmp/ccfbHqKe.s:1066   .text.USBD_LL_Transmit:00000000 USBD_LL_Transmit
ARM GAS  /tmp/ccfbHqKe.s 			page 38


     /tmp/ccfbHqKe.s:1112   .text.USBD_LL_PrepareReceive:00000000 $t
     /tmp/ccfbHqKe.s:1117   .text.USBD_LL_PrepareReceive:00000000 USBD_LL_PrepareReceive
     /tmp/ccfbHqKe.s:1163   .text.USBD_LL_GetRxDataSize:00000000 $t
     /tmp/ccfbHqKe.s:1168   .text.USBD_LL_GetRxDataSize:00000000 USBD_LL_GetRxDataSize
     /tmp/ccfbHqKe.s:1191   .text.USBD_LL_Delay:00000000 $t
     /tmp/ccfbHqKe.s:1196   .text.USBD_LL_Delay:00000000 USBD_LL_Delay
     /tmp/ccfbHqKe.s:1216   .text.USBD_static_malloc:00000000 $t
     /tmp/ccfbHqKe.s:1221   .text.USBD_static_malloc:00000000 USBD_static_malloc
     /tmp/ccfbHqKe.s:1236   .text.USBD_static_malloc:00000004 $d
     /tmp/ccfbHqKe.s:1241   .text.USBD_static_free:00000000 $t
     /tmp/ccfbHqKe.s:1246   .text.USBD_static_free:00000000 USBD_static_free
     /tmp/ccfbHqKe.s:1259   .text.HAL_PCDEx_SetConnectionState:00000000 $t
     /tmp/ccfbHqKe.s:1264   .text.HAL_PCDEx_SetConnectionState:00000000 HAL_PCDEx_SetConnectionState
     /tmp/ccfbHqKe.s:1278   .rodata.str1.4:00000000 $d
     /tmp/ccfbHqKe.s:1282   .bss.mem.7680:00000000 $d
     /tmp/ccfbHqKe.s:1286   .bss.mem.7680:00000000 mem.7680
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
_Error_Handler
HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
